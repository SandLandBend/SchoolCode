(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 9.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       157,          7]
NotebookDataLength[    211530,       4562]
NotebookOptionsPosition[    208223,       4456]
NotebookOutlinePosition[    208631,       4474]
CellTagsIndexPosition[    208588,       4471]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["ASEN 5007-Homework 7", "Title",
 CellChangeTimes->{{3.58782448507475*^9, 3.5878244971110783`*^9}, {
  3.5907702187557297`*^9, 3.5907702188344383`*^9}, {3.591496034371768*^9, 
  3.591496035187675*^9}, {3.5919835460103817`*^9, 3.591983546490944*^9}}],

Cell["Zach Dischner & SOMEONE ELSE", "Subtitle",
 CellChangeTimes->{{3.587824499248228*^9, 3.587824500903141*^9}, {
  3.590770195354347*^9, 3.590770200890245*^9}, {3.591544933873954*^9, 
  3.591544935775342*^9}, {3.591983542623353*^9, 3.591983544515092*^9}}],

Cell["", "Subsubtitle",
 CellChangeTimes->{3.590770221793289*^9}],

Cell[CellGroupData[{

Cell["Helpful Modules", "Section",
 CellChangeTimes->{{3.587824506223967*^9, 3.587824507990913*^9}, {
  3.590770242014482*^9, 3.5907702445783587`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"PrintWithStyle", "[", "x_", "]"}], " ", ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"color", "=", "LightGreen"}], "}"}], ",", 
    RowBox[{"Framed", "[", 
     RowBox[{
      RowBox[{"Style", "[", 
       RowBox[{"x", ",", "18", ",", "Bold", ",", 
        RowBox[{"Background", "\[Rule]", "color"}]}], "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"Background", "\[Rule]", "color"}]}], "]"}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.5878277622951813`*^9, 3.587827801470587*^9}, {
  3.5878279140382023`*^9, 3.587828037992056*^9}, {3.587828092581545*^9, 
  3.58782809340242*^9}, {3.587828151664729*^9, 3.587828183864581*^9}, {
  3.5878282160385027`*^9, 3.5878284333882923`*^9}}],

Cell[TextData[StyleBox["Cell 7: Simple function to print output for solutions \
in a stylazed way",
 FontSize->12]], "Text",
 CellChangeTimes->{{3.5878250168615837`*^9, 3.587825022435727*^9}, {
  3.587827743369121*^9, 3.5878277582173223`*^9}},
 Background->GrayLevel[0.85]],

Cell[BoxData[
 RowBox[{
  RowBox[{"PrintWithStyleMat", "[", "x_", "]"}], " ", ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"color", "=", "LightGreen"}], "}"}], ",", 
    RowBox[{"Style", "[", 
     RowBox[{"x", ",", "\[IndentingNewLine]", 
      RowBox[{"Background", "\[Rule]", "color"}]}], "]"}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.590776001488886*^9, 3.590776015640019*^9}}],

Cell["\<\
The following  modules compute the stiffness matrix, consistent node body \
forces,
and corner stresses of the 4-node bilinear iso-P quad in plane stress.  For \
Exercises
in Chapter 17 only the stiffness module is necessary.

Compute element stiffness matrix of 4-node bilinear quadrilateral\
\>", "Text",
 CellChangeTimes->{{3.591984640301422*^9, 3.591984652402586*^9}, {
  3.5919850366960583`*^9, 3.591985038537635*^9}},
 Background->GrayLevel[0.85]],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Quad4IsoPMembraneStiffness", "[", 
     RowBox[{"ncoor_", ",", "Emat_", ",", "th_", ",", "options_"}], "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"i", ",", "k", ",", 
        RowBox[{"p", "=", "2"}], ",", 
        RowBox[{"numer", "=", "False"}], ",", 
        RowBox[{"h", "=", "th"}], ",", "qcoor", ",", "c", ",", "w", ",", "Nf",
         ",", "dNx", ",", "dNy", ",", "Jdet", ",", "Be", ",", 
        RowBox[{"Ke", "=", 
         RowBox[{"Table", "[", 
          RowBox[{"0", ",", 
           RowBox[{"{", "8", "}"}], ",", 
           RowBox[{"{", "8", "}"}]}], "]"}]}]}], "}"}], ",", 
      RowBox[{
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Length", "[", "options", "]"}], "\[Equal]", "2"}], ",", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"numer", ",", "p"}], "}"}], "=", "options"}], ",", 
         RowBox[{
          RowBox[{"{", "numer", "}"}], "=", "options"}]}], "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"p", "<", "1"}], "||", 
          RowBox[{"p", ">", "4"}]}], ",", 
         RowBox[{
          RowBox[{"Print", "[", "\"\<p out of range\>\"", "]"}], ";", 
          RowBox[{"Return", "[", "Null", "]"}]}]}], "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{"k", "=", "1"}], ",", 
         RowBox[{"k", "\[LessEqual]", 
          RowBox[{"p", "*", "p"}]}], ",", 
         RowBox[{"k", "++"}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"{", 
            RowBox[{"qcoor", ",", "w"}], "}"}], "=", 
           RowBox[{"QuadGaussRuleInfo", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"p", ",", "numer"}], "}"}], ",", "k"}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"Nf", ",", "dNx", ",", "dNy", ",", "Jdet"}], "}"}], "=", 
           RowBox[{"Quad4IsoPShapeFunDer", "[", 
            RowBox[{"ncoor", ",", "qcoor"}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"Length", "[", "th", "]"}], "\[Equal]", "4"}], ",", 
            RowBox[{"h", "=", 
             RowBox[{"th", ".", "Nf"}]}]}], "]"}], ";", 
          RowBox[{"c", "=", 
           RowBox[{"w", "*", "Jdet", "*", "h"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"Be", "=", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Flatten", "[", 
              RowBox[{"Table", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"dNx", "[", 
                   RowBox[{"[", "i", "]"}], "]"}], ",", "0"}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"i", ",", "4"}], "}"}]}], "]"}], "]"}], ",", 
             RowBox[{"Flatten", "[", 
              RowBox[{"Table", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"0", ",", 
                  RowBox[{"dNy", "[", 
                   RowBox[{"[", "i", "]"}], "]"}]}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"i", ",", "4"}], "}"}]}], "]"}], "]"}], ",", 
             RowBox[{"Flatten", "[", 
              RowBox[{"Table", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"dNy", "[", 
                   RowBox[{"[", "i", "]"}], "]"}], ",", 
                  RowBox[{"dNx", "[", 
                   RowBox[{"[", "i", "]"}], "]"}]}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"i", ",", "4"}], "}"}]}], "]"}], "]"}]}], "}"}]}], 
          ";", "\[IndentingNewLine]", 
          RowBox[{"Ke", "+=", 
           RowBox[{"Simplify", "[", 
            RowBox[{"c", "*", 
             RowBox[{
              RowBox[{"Transpose", "[", "Be", "]"}], ".", 
              RowBox[{"(", 
               RowBox[{"Emat", ".", "Be"}], ")"}]}]}], "]"}]}], ";"}]}], 
        "]"}], ";", 
       RowBox[{"Return", "[", 
        RowBox[{"Simplify", "[", "Ke", "]"}], "]"}]}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Quad4IsoPMembraneBodyForces", "[", 
     RowBox[{
     "ncoor_", ",", "rho_", ",", "th_", ",", "options_", ",", "bfor_"}], 
     "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"i", ",", "k", ",", 
        RowBox[{"p", "=", "2"}], ",", 
        RowBox[{"numer", "=", "False"}], ",", 
        RowBox[{"h", "=", "th"}], ",", "bx", ",", "by", ",", "bx1", ",", 
        "by1", ",", "bx2", ",", "by2", ",", "bx3", ",", "by3", ",", "bx4", 
        ",", "by4", ",", "bxc", ",", "byc", ",", "qcoor", ",", "c", ",", "w", 
        ",", "Nf", ",", "dNx", ",", "dNy", ",", "Jdet", ",", "B", ",", 
        "qctab", ",", 
        RowBox[{"fe", "=", 
         RowBox[{"Table", "[", 
          RowBox[{"0", ",", 
           RowBox[{"{", "8", "}"}]}], "]"}]}]}], "}"}], ",", 
      RowBox[{
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Length", "[", "options", "]"}], "\[Equal]", "2"}], ",", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"numer", ",", "p"}], "}"}], "=", "options"}], ",", 
         RowBox[{
          RowBox[{"{", "numer", "}"}], "=", "options"}]}], "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Length", "[", "bfor", "]"}], "\[Equal]", "2"}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"{", 
            RowBox[{"bx", ",", "by"}], "}"}], "=", "bfor"}], ";", 
          RowBox[{"bx1", "=", 
           RowBox[{"bx2", "=", 
            RowBox[{"bx3", "=", 
             RowBox[{"bx4", "=", "bx"}]}]}]}], ";", 
          RowBox[{"by1", "=", 
           RowBox[{"by2", "=", 
            RowBox[{"by3", "=", 
             RowBox[{"by4", "=", "by"}]}]}]}]}]}], "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Length", "[", "bfor", "]"}], "\[Equal]", "4"}], ",", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"bx1", ",", "by1"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"bx2", ",", "by2"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"bx3", ",", "by3"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"bx4", ",", "by4"}], "}"}]}], "}"}], "=", "bfor"}]}], 
        "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"p", "<", "1"}], "||", 
          RowBox[{"p", ">", "4"}]}], ",", 
         RowBox[{
          RowBox[{"Print", "[", "\"\<p out of range\>\"", "]"}], ";", 
          RowBox[{"Return", "[", "Null", "]"}]}]}], "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"bxc", "=", 
        RowBox[{"{", 
         RowBox[{"bx1", ",", "bx2", ",", "bx3", ",", "bx4"}], "}"}]}], ";", 
       RowBox[{"byc", "=", 
        RowBox[{"{", 
         RowBox[{"by1", ",", "by2", ",", "by3", ",", "by4"}], "}"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{"k", "=", "1"}], ",", 
         RowBox[{"k", "\[LessEqual]", 
          RowBox[{"p", "*", "p"}]}], ",", 
         RowBox[{"k", "++"}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"{", 
            RowBox[{"qcoor", ",", "w"}], "}"}], "=", 
           RowBox[{"QuadGaussRuleInfo", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"p", ",", "numer"}], "}"}], ",", "k"}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"Nf", ",", "dNx", ",", "dNy", ",", "Jdet"}], "}"}], "=", 
           RowBox[{"Quad4IsoPShapeFunDer", "[", 
            RowBox[{"ncoor", ",", "qcoor"}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"bx", "=", 
           RowBox[{"Nf", ".", "bxc"}]}], ";", 
          RowBox[{"by", "=", 
           RowBox[{"Nf", ".", "byc"}]}], ";", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"Length", "[", "th", "]"}], "\[Equal]", "4"}], ",", 
            RowBox[{"h", "=", 
             RowBox[{"th", ".", "Nf"}]}]}], "]"}], ";", "\[IndentingNewLine]", 
          RowBox[{"c", "=", 
           RowBox[{"w", "*", "Jdet", "*", "h"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"bk", "=", 
           RowBox[{"Flatten", "[", 
            RowBox[{"Table", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{
                 RowBox[{"Nf", "[", 
                  RowBox[{"[", "i", "]"}], "]"}], "*", "bx"}], ",", 
                RowBox[{
                 RowBox[{"Nf", "[", 
                  RowBox[{"[", "i", "]"}], "]"}], "*", "by"}]}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"i", ",", "4"}], "}"}]}], "]"}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"fe", "+=", 
           RowBox[{"c", "*", "bk"}]}], ";"}]}], "]"}], ";", 
       RowBox[{"Return", "[", "fe", "]"}]}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Quad4IsoPMembraneStresses", "[", 
     RowBox[{
     "ncoor_", ",", "Emat_", ",", "th_", ",", "options_", ",", "udis_"}], 
     "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"i", ",", "k", ",", 
        RowBox[{"numer", "=", "False"}], ",", "qcoor", ",", "Nf", ",", "dNx", 
        ",", "dNy", ",", "Jdet", ",", "Be", ",", "qctab", ",", 
        RowBox[{"ue", "=", "udis"}], ",", 
        RowBox[{"sige", "=", 
         RowBox[{"Table", "[", 
          RowBox[{"0", ",", 
           RowBox[{"{", "4", "}"}], ",", 
           RowBox[{"{", "3", "}"}]}], "]"}]}]}], "}"}], ",", 
      RowBox[{
       RowBox[{"qctab", "=", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "1"}], ",", 
            RowBox[{"-", "1"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"1", ",", 
            RowBox[{"-", "1"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"1", ",", "1"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "}"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"numer", "=", 
        RowBox[{"options", "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Length", "[", "udis", "]"}], "\[Equal]", "4"}], ",", 
         RowBox[{"ue", "=", 
          RowBox[{"Flatten", "[", "udis", "]"}]}]}], "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{"k", "=", "1"}], ",", 
         RowBox[{"k", "\[LessEqual]", 
          RowBox[{"Length", "[", "sige", "]"}]}], ",", 
         RowBox[{"k", "++"}], ",", 
         RowBox[{
          RowBox[{"qcoor", "=", 
           RowBox[{"qctab", "[", 
            RowBox[{"[", "k", "]"}], "]"}]}], ";", 
          RowBox[{"If", "[", 
           RowBox[{"numer", ",", 
            RowBox[{"qcoor", "=", 
             RowBox[{"N", "[", "qcoor", "]"}]}]}], "]"}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"Nf", ",", "dNx", ",", "dNy", ",", "Jdet"}], "}"}], "=", 
           RowBox[{"Quad4IsoPShapeFunDer", "[", 
            RowBox[{"ncoor", ",", "qcoor"}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"Be", "=", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Flatten", "[", 
              RowBox[{"Table", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"dNx", "[", 
                   RowBox[{"[", "i", "]"}], "]"}], ",", "0"}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"i", ",", "4"}], "}"}]}], "]"}], "]"}], ",", 
             RowBox[{"Flatten", "[", 
              RowBox[{"Table", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"0", ",", 
                  RowBox[{"dNy", "[", 
                   RowBox[{"[", "i", "]"}], "]"}]}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"i", ",", "4"}], "}"}]}], "]"}], "]"}], ",", 
             RowBox[{"Flatten", "[", 
              RowBox[{"Table", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"dNy", "[", 
                   RowBox[{"[", "i", "]"}], "]"}], ",", 
                  RowBox[{"dNx", "[", 
                   RowBox[{"[", "i", "]"}], "]"}]}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"i", ",", "4"}], "}"}]}], "]"}], "]"}]}], "}"}]}], 
          ";", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"sige", "[", 
            RowBox[{"[", "k", "]"}], "]"}], "=", 
           RowBox[{"Emat", ".", 
            RowBox[{"(", 
             RowBox[{"Be", ".", "ue"}], ")"}]}]}], ";"}]}], "]"}], ";", 
       RowBox[{"Return", "[", "sige", "]"}]}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Quad4IsoPShapeFunDer", "[", 
     RowBox[{"ncoor_", ",", "qcoor_"}], "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "Nf", ",", "dNx", ",", "dNy", ",", "dN\[Xi]", ",", "dN\[Eta]", ",", 
        "i", ",", "J11", ",", "J12", ",", "J21", ",", "J22", ",", "Jdet", ",",
         "\[Xi]", ",", "\[Eta]", ",", "x", ",", "y", ",", "x1", ",", "x2", 
        ",", "x3", ",", "x4", ",", "y1", ",", "y2", ",", "y3", ",", "y4"}], 
       "}"}], ",", 
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{"\[Xi]", ",", "\[Eta]"}], "}"}], "=", "qcoor"}], ";", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"x1", ",", "y1"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"x2", ",", "y2"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"x3", ",", "y3"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"x4", ",", "y4"}], "}"}]}], "}"}], "=", "ncoor"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"Nf", "=", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{"1", "-", "\[Xi]"}], ")"}], "*", 
            RowBox[{"(", 
             RowBox[{"1", "-", "\[Eta]"}], ")"}]}], ",", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"1", "+", "\[Xi]"}], ")"}], "*", 
            RowBox[{"(", 
             RowBox[{"1", "-", "\[Eta]"}], ")"}]}], ",", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"1", "+", "\[Xi]"}], ")"}], "*", 
            RowBox[{"(", 
             RowBox[{"1", "+", "\[Eta]"}], ")"}]}], ",", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"1", "-", "\[Xi]"}], ")"}], "*", 
            RowBox[{"(", 
             RowBox[{"1", "+", "\[Eta]"}], ")"}]}]}], "}"}], "/", "4"}]}], 
       ";", "\[IndentingNewLine]", 
       RowBox[{"dN\[Xi]", "=", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", 
            RowBox[{"(", 
             RowBox[{"1", "-", "\[Eta]"}], ")"}]}], ",", 
           RowBox[{"(", 
            RowBox[{"1", "-", "\[Eta]"}], ")"}], ",", 
           RowBox[{"(", 
            RowBox[{"1", "+", "\[Eta]"}], ")"}], ",", 
           RowBox[{"-", 
            RowBox[{"(", 
             RowBox[{"1", "+", "\[Eta]"}], ")"}]}]}], "}"}], "/", "4"}]}], 
       ";", "\[IndentingNewLine]", 
       RowBox[{"dN\[Eta]", "=", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", 
            RowBox[{"(", 
             RowBox[{"1", "-", "\[Xi]"}], ")"}]}], ",", 
           RowBox[{"-", 
            RowBox[{"(", 
             RowBox[{"1", "+", "\[Xi]"}], ")"}]}], ",", 
           RowBox[{"(", 
            RowBox[{"1", "+", "\[Xi]"}], ")"}], ",", 
           RowBox[{"(", 
            RowBox[{"1", "-", "\[Xi]"}], ")"}]}], "}"}], "/", "4"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"x", "=", 
        RowBox[{"{", 
         RowBox[{"x1", ",", "x2", ",", "x3", ",", "x4"}], "}"}]}], ";", 
       RowBox[{"y", "=", 
        RowBox[{"{", 
         RowBox[{"y1", ",", "y2", ",", "y3", ",", "y4"}], "}"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"J11", "=", 
        RowBox[{"dN\[Xi]", ".", "x"}]}], ";", 
       RowBox[{"J12", "=", 
        RowBox[{"dN\[Xi]", ".", "y"}]}], ";", 
       RowBox[{"J21", "=", 
        RowBox[{"dN\[Eta]", ".", "x"}]}], ";", 
       RowBox[{"J22", "=", 
        RowBox[{"dN\[Eta]", ".", "y"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"Jdet", "=", 
        RowBox[{"Simplify", "[", 
         RowBox[{
          RowBox[{"J11", "*", "J22"}], "-", 
          RowBox[{"J12", "*", "J21"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
       
       RowBox[{"dNx", "=", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"J22", "*", "dN\[Xi]"}], "-", 
           RowBox[{"J12", "*", "dN\[Eta]"}]}], ")"}], "/", "Jdet"}]}], ";", 
       RowBox[{"dNx", "=", 
        RowBox[{"Simplify", "[", "dNx", "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"dNy", "=", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "J21"}], "*", "dN\[Xi]"}], "+", 
           RowBox[{"J11", "*", "dN\[Eta]"}]}], ")"}], "/", "Jdet"}]}], ";", 
       RowBox[{"dNy", "=", 
        RowBox[{"Simplify", "[", "dNy", "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"Return", "[", 
        RowBox[{"{", 
         RowBox[{"Nf", ",", "dNx", ",", "dNy", ",", "Jdet"}], "}"}], 
        "]"}]}]}], "]"}]}], ";"}], "\[IndentingNewLine]"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"QuadGaussRuleInfo", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"rule_", ",", "numer_"}], "}"}], ",", "point_"}], "]"}], ":=", 
    
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "\[Xi]", ",", "\[Eta]", ",", "p1", ",", "p2", ",", "i", ",", "j", ",", 
        "w1", ",", "w2", ",", "m", ",", 
        RowBox[{"info", "=", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"Null", ",", "Null"}], "}"}], ",", "0"}], "}"}]}]}], 
       "}"}], ",", 
      RowBox[{
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Length", "[", "rule", "]"}], "\[Equal]", "2"}], ",", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"p1", ",", "p2"}], "}"}], "=", "rule"}], ",", 
         RowBox[{"p1", "=", 
          RowBox[{"p2", "=", "rule"}]}]}], "]"}], ";", "\[IndentingNewLine]", 
       
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Length", "[", "point", "]"}], "\[Equal]", "2"}], ",", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"i", ",", "j"}], "}"}], "=", "point"}], ",", 
         RowBox[{
          RowBox[{"m", "=", "point"}], ";", "\[IndentingNewLine]", 
          RowBox[{"j", "=", 
           RowBox[{
            RowBox[{"Floor", "[", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"m", "-", "1"}], ")"}], "/", "p1"}], "]"}], "+", 
            "1"}]}], ";", 
          RowBox[{"i", "=", 
           RowBox[{"m", "-", 
            RowBox[{"p1", "*", 
             RowBox[{"(", 
              RowBox[{"j", "-", "1"}], ")"}]}]}]}]}]}], "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"\[Xi]", ",", "w1"}], "}"}], "=", 
        RowBox[{"LineGaussRuleInfo", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"p1", ",", "numer"}], "}"}], ",", "i"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"\[Eta]", ",", "w2"}], "}"}], "=", 
        RowBox[{"LineGaussRuleInfo", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"p2", ",", "numer"}], "}"}], ",", "j"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"info", "=", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"\[Xi]", ",", "\[Eta]"}], "}"}], ",", 
          RowBox[{"w1", "*", "w2"}]}], "}"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{"numer", ",", 
         RowBox[{"Return", "[", 
          RowBox[{"N", "[", "info", "]"}], "]"}], ",", 
         RowBox[{"Return", "[", 
          RowBox[{"Simplify", "[", "info", "]"}], "]"}]}], "]"}], ";"}]}], 
     "]"}]}], ";"}], "\n", "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"LineGaussRuleInfo", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"rule_", ",", "numer_"}], "}"}], ",", "point_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"g2", "=", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "1"}], ",", "1"}], "}"}], "/", 
         RowBox[{"Sqrt", "[", "3", "]"}]}]}], ",", 
       RowBox[{"w3", "=", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"5", "/", "9"}], ",", 
          RowBox[{"8", "/", "9"}], ",", 
          RowBox[{"5", "/", "9"}]}], "}"}]}], ",", 
       RowBox[{"g3", "=", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", 
           RowBox[{"Sqrt", "[", 
            RowBox[{"3", "/", "5"}], "]"}]}], ",", "0", ",", 
          RowBox[{"Sqrt", "[", 
           RowBox[{"3", "/", "5"}], "]"}]}], "}"}]}], ",", 
       RowBox[{"w4", "=", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"1", "/", "2"}], ")"}], "-", 
           RowBox[{
            RowBox[{"Sqrt", "[", 
             RowBox[{"5", "/", "6"}], "]"}], "/", "6"}]}], ",", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"1", "/", "2"}], ")"}], "+", 
           RowBox[{
            RowBox[{"Sqrt", "[", 
             RowBox[{"5", "/", "6"}], "]"}], "/", "6"}]}], ",", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"1", "/", "2"}], ")"}], "+", 
           RowBox[{
            RowBox[{"Sqrt", "[", 
             RowBox[{"5", "/", "6"}], "]"}], "/", "6"}]}], ",", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"1", "/", "2"}], ")"}], "-", 
           RowBox[{
            RowBox[{"Sqrt", "[", 
             RowBox[{"5", "/", "6"}], "]"}], "/", "6"}]}]}], "}"}]}], ",", 
       RowBox[{"g4", "=", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", 
           RowBox[{"Sqrt", "[", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"3", "+", 
               RowBox[{"2", "*", 
                RowBox[{"Sqrt", "[", 
                 RowBox[{"6", "/", "5"}], "]"}]}]}], ")"}], "/", "7"}], 
            "]"}]}], ",", 
          RowBox[{"-", 
           RowBox[{"Sqrt", "[", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"3", "-", 
               RowBox[{"2", "*", 
                RowBox[{"Sqrt", "[", 
                 RowBox[{"6", "/", "5"}], "]"}]}]}], ")"}], "/", "7"}], 
            "]"}]}], ",", 
          RowBox[{"Sqrt", "[", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"3", "-", 
              RowBox[{"2", "*", 
               RowBox[{"Sqrt", "[", 
                RowBox[{"6", "/", "5"}], "]"}]}]}], ")"}], "/", "7"}], "]"}], 
          ",", 
          RowBox[{"Sqrt", "[", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"3", "+", 
              RowBox[{"2", "*", 
               RowBox[{"Sqrt", "[", 
                RowBox[{"6", "/", "5"}], "]"}]}]}], ")"}], "/", "7"}], 
           "]"}]}], "}"}]}], ",", 
       RowBox[{"g5", "=", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", 
            RowBox[{"Sqrt", "[", 
             RowBox[{"5", "+", 
              RowBox[{"2", "*", 
               RowBox[{"Sqrt", "[", 
                RowBox[{"10", "/", "7"}], "]"}]}]}], "]"}]}], ",", 
           RowBox[{"-", 
            RowBox[{"Sqrt", "[", 
             RowBox[{"5", "-", 
              RowBox[{"2", "*", 
               RowBox[{"Sqrt", "[", 
                RowBox[{"10", "/", "7"}], "]"}]}]}], "]"}]}], ",", "0", ",", 
           RowBox[{"Sqrt", "[", 
            RowBox[{"5", "-", 
             RowBox[{"2", "*", 
              RowBox[{"Sqrt", "[", 
               RowBox[{"10", "/", "7"}], "]"}]}]}], "]"}], ",", 
           RowBox[{"Sqrt", "[", 
            RowBox[{"5", "+", 
             RowBox[{"2", "*", 
              RowBox[{"Sqrt", "[", 
               RowBox[{"10", "/", "7"}], "]"}]}]}], "]"}]}], "}"}], "/", 
         "3"}]}], ",", 
       RowBox[{"w5", "=", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"322", "-", 
            RowBox[{"13", "*", 
             RowBox[{"Sqrt", "[", "70", "]"}]}]}], ",", 
           RowBox[{"322", "+", 
            RowBox[{"13", "*", 
             RowBox[{"Sqrt", "[", "70", "]"}]}]}], ",", "512", ",", 
           RowBox[{"322", "+", 
            RowBox[{"13", "*", 
             RowBox[{"Sqrt", "[", "70", "]"}]}]}], ",", 
           RowBox[{"322", "-", 
            RowBox[{"13", "*", 
             RowBox[{"Sqrt", "[", "70", "]"}]}]}]}], "}"}], "/", "900"}]}], 
       ",", 
       RowBox[{"i", "=", "point"}], ",", 
       RowBox[{"p", "=", "rule"}], ",", 
       RowBox[{"info", "=", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"Null", ",", "Null"}], "}"}], ",", "0"}], "}"}]}]}], "}"}],
      ",", 
     RowBox[{
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"p", "\[Equal]", "1"}], ",", 
        RowBox[{"info", "=", 
         RowBox[{"{", 
          RowBox[{"0", ",", "2"}], "}"}]}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"p", "\[Equal]", "2"}], ",", 
        RowBox[{"info", "=", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"g2", "[", 
            RowBox[{"[", "i", "]"}], "]"}], ",", "1"}], "}"}]}]}], "]"}], ";",
       "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"p", "\[Equal]", "3"}], ",", 
        RowBox[{"info", "=", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"g3", "[", 
            RowBox[{"[", "i", "]"}], "]"}], ",", 
           RowBox[{"w3", "[", 
            RowBox[{"[", "i", "]"}], "]"}]}], "}"}]}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"p", "\[Equal]", "4"}], ",", 
        RowBox[{"info", "=", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"g4", "[", 
            RowBox[{"[", "i", "]"}], "]"}], ",", 
           RowBox[{"w4", "[", 
            RowBox[{"[", "i", "]"}], "]"}]}], "}"}]}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"p", "\[Equal]", "5"}], ",", 
        RowBox[{"info", "=", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"g5", "[", 
            RowBox[{"[", "i", "]"}], "]"}], ",", 
           RowBox[{"w5", "[", 
            RowBox[{"[", "i", "]"}], "]"}]}], "}"}]}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{"numer", ",", 
        RowBox[{"Return", "[", 
         RowBox[{"N", "[", "info", "]"}], "]"}], ",", 
        RowBox[{"Return", "[", 
         RowBox[{"Simplify", "[", "info", "]"}], "]"}]}], "]"}], ";"}]}], 
    "]"}]}], ";"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.591984621264132*^9, 3.591984621265376*^9}, 
   3.59198501332616*^9, {3.59205639345608*^9, 3.592056423063897*^9}, {
   3.592056456891965*^9, 3.5920564572301397`*^9}},
 Background->RGBColor[0.87, 0.94, 1]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Problem 1-Book 17.1", "Section",
 CellChangeTimes->{{3.5919845738074493`*^9, 3.591984579476449*^9}}],

Cell[TextData[{
 "Exercise the following provided ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " module"
}], "Text",
 CellChangeTimes->{{3.591985124101117*^9, 3.591985136532083*^9}},
 Background->GrayLevel[0.85]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", 
   RowBox[{"Em", ",", "nu", ",", "a", ",", "b", ",", "h"}], "]"}], ";", 
  RowBox[{"Em", "=", "48"}], ";", 
  RowBox[{"a", "=", "1"}], ";", " ", 
  RowBox[{"b", "=", "1"}], ";", " ", 
  RowBox[{"h", "=", "1"}], ";", 
  RowBox[{"nu", "=", "0"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"ncoor", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"a", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"a", ",", "b"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "b"}], "}"}]}], "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Emat", "=", 
   RowBox[{
    RowBox[{"Em", "/", 
     RowBox[{"(", 
      RowBox[{"1", "-", 
       RowBox[{"nu", "^", "2"}]}], ")"}]}], "*", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"1", ",", "nu", ",", "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"nu", ",", "1", ",", "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0", ",", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"1", "-", "nu"}], ")"}], "/", "2"}]}], "}"}]}], "}"}]}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"For", "[", 
    RowBox[{
     RowBox[{"p", "=", "1"}], ",", 
     RowBox[{"p", "\[LessEqual]", "4"}], ",", 
     RowBox[{"p", "++"}], ",", 
     RowBox[{
      RowBox[{"Ke", "=", 
       RowBox[{"Quad4IsoPMembraneStiffness", "[", 
        RowBox[{"ncoor", ",", "Emat", ",", "h", ",", 
         RowBox[{"{", 
          RowBox[{"True", ",", "p"}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Print", "[", 
       RowBox[{
       "\"\<Gauss integration rule: \>\"", ",", "p", ",", "\"\< x \>\"", ",", 
        "p"}], "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"Print", "[", 
       RowBox[{"\"\<Ke=\>\"", ",", 
        RowBox[{
         RowBox[{"Chop", "[", "Ke", "]"}], "//", "MatrixForm"}]}], "]"}], ";",
       "\[IndentingNewLine]", 
      RowBox[{"Print", "[", 
       RowBox[{"\"\<Eigenvalues of Ke=\>\"", ",", 
        RowBox[{"Chop", "[", 
         RowBox[{"Eigenvalues", "[", 
          RowBox[{"N", "[", "Ke", "]"}], "]"}], "]"}]}], "]"}]}]}], "]"}], 
   ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"PrintWithStyle", "[", 
  "\"\<Verified that Ke remains constant for p=2,3,4.\>\"", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"PrintWithStyle", "[", 
  "\"\<Verified that for p=1, Ke produces 5 zero eigenvalues \
(wrong-sauce)\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{"PrintWithStyle", "[", 
  "\"\<The entries of h[Bt][E][B][J] are polynomials in \[Xi], \[Eta], of \
order 2 along constant lines of \[Xi] or \[Eta]. So if we try to estimate the \
Gaussian integral of a 2nd order function with a single point, erronious \
answers will arise, as with the p=1 integration. Gaussian integrations for \
p=2,3,4 will produce identical gaussian integrations. Since the polynomial is \
of degree less than 2p-1, the gaussian integration will be exact. I.E. the \
polynomias in \[Xi], \[Eta] along their iso-parametric counterparts are of \
degree 2, which is less than 2p-1 for each of the gaussian iterations in \
p={2,3,4} \>\"", "]"}]}], "Input",
 CellChangeTimes->{{3.591985138997501*^9, 3.5919851389986477`*^9}, {
  3.5919852403197117`*^9, 3.59198524535892*^9}, {3.591985584547612*^9, 
  3.5919855895308123`*^9}, {3.591987152352851*^9, 3.59198716403666*^9}, {
  3.592056283448482*^9, 3.592056321201812*^9}, {3.592056604782857*^9, 
  3.592056605397161*^9}, {3.592056745328204*^9, 3.592056745477408*^9}, {
  3.5920572509827633`*^9, 3.592057306702317*^9}, {3.5920573554845543`*^9, 
  3.5920573890629396`*^9}, {3.59205837296657*^9, 3.5920584008321247`*^9}, {
  3.592064565794467*^9, 3.592064666318171*^9}, {3.5920647062208242`*^9, 
  3.592064722623732*^9}},
 Background->RGBColor[0.87, 0.94, 1]],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Gauss integration rule: \"\>", "\[InvisibleSpace]", "1", 
   "\[InvisibleSpace]", "\<\" x \"\>", "\[InvisibleSpace]", "1"}],
  SequenceForm["Gauss integration rule: ", 1, " x ", 1],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.591987132699904*^9, 3.5919871647855053`*^9, {3.592056432548193*^9, 
   3.5920564615681458`*^9}, 3.5920566067869053`*^9, 3.5920567468358088`*^9, 
   3.59205731441578*^9, 3.5920573572177677`*^9, 3.592057389409814*^9, 
   3.5920647359199657`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Ke=\"\>", "\[InvisibleSpace]", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"18.`", "6.`", 
        RowBox[{"-", "6.`"}], 
        RowBox[{"-", "6.`"}], 
        RowBox[{"-", "18.`"}], 
        RowBox[{"-", "6.`"}], "6.`", "6.`"},
       {"6.`", "18.`", "6.`", "6.`", 
        RowBox[{"-", "6.`"}], 
        RowBox[{"-", "18.`"}], 
        RowBox[{"-", "6.`"}], 
        RowBox[{"-", "6.`"}]},
       {
        RowBox[{"-", "6.`"}], "6.`", "18.`", 
        RowBox[{"-", "6.`"}], "6.`", 
        RowBox[{"-", "6.`"}], 
        RowBox[{"-", "18.`"}], "6.`"},
       {
        RowBox[{"-", "6.`"}], "6.`", 
        RowBox[{"-", "6.`"}], "18.`", "6.`", 
        RowBox[{"-", "6.`"}], "6.`", 
        RowBox[{"-", "18.`"}]},
       {
        RowBox[{"-", "18.`"}], 
        RowBox[{"-", "6.`"}], "6.`", "6.`", "18.`", "6.`", 
        RowBox[{"-", "6.`"}], 
        RowBox[{"-", "6.`"}]},
       {
        RowBox[{"-", "6.`"}], 
        RowBox[{"-", "18.`"}], 
        RowBox[{"-", "6.`"}], 
        RowBox[{"-", "6.`"}], "6.`", "18.`", "6.`", "6.`"},
       {"6.`", 
        RowBox[{"-", "6.`"}], 
        RowBox[{"-", "18.`"}], "6.`", 
        RowBox[{"-", "6.`"}], "6.`", "18.`", 
        RowBox[{"-", "6.`"}]},
       {"6.`", 
        RowBox[{"-", "6.`"}], "6.`", 
        RowBox[{"-", "18.`"}], 
        RowBox[{"-", "6.`"}], "6.`", 
        RowBox[{"-", "6.`"}], "18.`"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]]}],
  SequenceForm["Ke=", 
   MatrixForm[CompressedData["
1:eJxTTMoPSmViYGDggGIIMHKA0BIw+gAqbYTGl0BX74DDHDTzMMzBYS7cHHT7
0M0hpA6HO+D24HIXmj5C4UPQf7jMwWEuIf8RCh90/+EOHwDELilc
    "]]],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.591987132699904*^9, 3.5919871647855053`*^9, {3.592056432548193*^9, 
   3.5920564615681458`*^9}, 3.5920566067869053`*^9, 3.5920567468358088`*^9, 
   3.59205731441578*^9, 3.5920573572177677`*^9, 3.592057389409814*^9, 
   3.592064735921644*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Eigenvalues of Ke=\"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "48.`", ",", "48.`", ",", "48.`", ",", "0", ",", "0", ",", "0", ",", "0", 
     ",", "0"}], "}"}]}],
  SequenceForm["Eigenvalues of Ke=", {48., 48., 48., 0, 0, 0, 0, 0}],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.591987132699904*^9, 3.5919871647855053`*^9, {3.592056432548193*^9, 
   3.5920564615681458`*^9}, 3.5920566067869053`*^9, 3.5920567468358088`*^9, 
   3.59205731441578*^9, 3.5920573572177677`*^9, 3.592057389409814*^9, 
   3.5920647359236794`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Gauss integration rule: \"\>", "\[InvisibleSpace]", "2", 
   "\[InvisibleSpace]", "\<\" x \"\>", "\[InvisibleSpace]", "2"}],
  SequenceForm["Gauss integration rule: ", 2, " x ", 2],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.591987132699904*^9, 3.5919871647855053`*^9, {3.592056432548193*^9, 
   3.5920564615681458`*^9}, 3.5920566067869053`*^9, 3.5920567468358088`*^9, 
   3.59205731441578*^9, 3.5920573572177677`*^9, 3.592057389409814*^9, 
   3.59206473592509*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Ke=\"\>", "\[InvisibleSpace]", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"23.999999999999996`", "5.999999999999999`", 
        RowBox[{"-", "11.999999999999996`"}], 
        RowBox[{"-", "5.999999999999999`"}], 
        RowBox[{"-", "11.999999999999996`"}], 
        RowBox[{"-", "5.999999999999999`"}], "0", "5.999999999999999`"},
       {"5.999999999999999`", "23.999999999999996`", "5.999999999999999`", 
        "0", 
        RowBox[{"-", "5.999999999999999`"}], 
        RowBox[{"-", "11.999999999999996`"}], 
        RowBox[{"-", "5.999999999999999`"}], 
        RowBox[{"-", "11.999999999999998`"}]},
       {
        RowBox[{"-", "11.999999999999996`"}], "5.999999999999999`", 
        "23.999999999999996`", 
        RowBox[{"-", "5.999999999999999`"}], "0", 
        RowBox[{"-", "5.999999999999998`"}], 
        RowBox[{"-", "11.999999999999996`"}], "5.999999999999998`"},
       {
        RowBox[{"-", "5.999999999999999`"}], "0", 
        RowBox[{"-", "5.999999999999999`"}], "23.999999999999993`", 
        "5.999999999999999`", 
        RowBox[{"-", "11.999999999999998`"}], "5.999999999999999`", 
        RowBox[{"-", "11.999999999999996`"}]},
       {
        RowBox[{"-", "11.999999999999996`"}], 
        RowBox[{"-", "5.999999999999999`"}], "0", "5.999999999999999`", 
        "23.999999999999993`", "5.999999999999998`", 
        RowBox[{"-", "11.999999999999998`"}], 
        RowBox[{"-", "5.999999999999998`"}]},
       {
        RowBox[{"-", "5.999999999999999`"}], 
        RowBox[{"-", "11.999999999999996`"}], 
        RowBox[{"-", "5.999999999999998`"}], 
        RowBox[{"-", "11.999999999999998`"}], "5.999999999999998`", 
        "23.999999999999993`", "5.999999999999999`", "0"},
       {"0", 
        RowBox[{"-", "5.999999999999999`"}], 
        RowBox[{"-", "11.999999999999996`"}], "5.999999999999999`", 
        RowBox[{"-", "11.999999999999998`"}], "5.999999999999999`", 
        "23.999999999999993`", 
        RowBox[{"-", "5.999999999999999`"}]},
       {"5.999999999999999`", 
        RowBox[{"-", "11.999999999999998`"}], "5.999999999999998`", 
        RowBox[{"-", "11.999999999999996`"}], 
        RowBox[{"-", "5.999999999999998`"}], "0", 
        RowBox[{"-", "5.999999999999999`"}], "23.999999999999996`"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]]}],
  SequenceForm["Ke=", 
   MatrixForm[{{
     23.999999999999996`, 
      5.999999999999999, -11.999999999999996`, -5.999999999999999, \
-11.999999999999996`, -5.999999999999999, 0, 5.999999999999999}, {
     5.999999999999999, 23.999999999999996`, 5.999999999999999, 
      0, -5.999999999999999, -11.999999999999996`, -5.999999999999999, \
-11.999999999999998`}, {-11.999999999999996`, 5.999999999999999, 
      23.999999999999996`, -5.999999999999999, 
      0, -5.999999999999998, -11.999999999999996`, 
      5.999999999999998}, {-5.999999999999999, 0, -5.999999999999999, 
      23.999999999999993`, 5.999999999999999, -11.999999999999998`, 
      5.999999999999999, -11.999999999999996`}, {-11.999999999999996`, \
-5.999999999999999, 0, 5.999999999999999, 23.999999999999993`, 
      5.999999999999998, -11.999999999999998`, -5.999999999999998}, \
{-5.999999999999999, -11.999999999999996`, -5.999999999999998, \
-11.999999999999998`, 5.999999999999998, 23.999999999999993`, 
      5.999999999999999, 0}, {
     0, -5.999999999999999, -11.999999999999996`, 
      5.999999999999999, -11.999999999999998`, 5.999999999999999, 
      23.999999999999993`, -5.999999999999999}, {
     5.999999999999999, -11.999999999999998`, 
      5.999999999999998, -11.999999999999996`, -5.999999999999998, 
      0, -5.999999999999999, 23.999999999999996`}}]],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.591987132699904*^9, 3.5919871647855053`*^9, {3.592056432548193*^9, 
   3.5920564615681458`*^9}, 3.5920566067869053`*^9, 3.5920567468358088`*^9, 
   3.59205731441578*^9, 3.5920573572177677`*^9, 3.592057389409814*^9, 
   3.592064735926729*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Eigenvalues of Ke=\"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "47.99999999999998`", ",", "47.99999999999998`", ",", 
     "47.99999999999996`", ",", "24.000000000000007`", ",", 
     "23.999999999999996`", ",", "0", ",", "0", ",", "0"}], "}"}]}],
  SequenceForm[
  "Eigenvalues of Ke=", {
   47.99999999999998, 47.99999999999998, 47.99999999999996, 
    24.000000000000007`, 23.999999999999996`, 0, 0, 0}],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.591987132699904*^9, 3.5919871647855053`*^9, {3.592056432548193*^9, 
   3.5920564615681458`*^9}, 3.5920566067869053`*^9, 3.5920567468358088`*^9, 
   3.59205731441578*^9, 3.5920573572177677`*^9, 3.592057389409814*^9, 
   3.592064735928563*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Gauss integration rule: \"\>", "\[InvisibleSpace]", "3", 
   "\[InvisibleSpace]", "\<\" x \"\>", "\[InvisibleSpace]", "3"}],
  SequenceForm["Gauss integration rule: ", 3, " x ", 3],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.591987132699904*^9, 3.5919871647855053`*^9, {3.592056432548193*^9, 
   3.5920564615681458`*^9}, 3.5920566067869053`*^9, 3.5920567468358088`*^9, 
   3.59205731441578*^9, 3.5920573572177677`*^9, 3.592057389409814*^9, 
   3.5920647359299726`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Ke=\"\>", "\[InvisibleSpace]", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"24.`", "5.999999999999999`", 
        RowBox[{"-", "12.000000000000002`"}], 
        RowBox[{"-", "5.999999999999999`"}], 
        RowBox[{"-", "12.`"}], 
        RowBox[{"-", "6.`"}], "0", "6.`"},
       {"5.999999999999999`", "24.000000000000004`", "5.999999999999999`", 
        "0", 
        RowBox[{"-", "5.999999999999999`"}], 
        RowBox[{"-", "11.999999999999998`"}], 
        RowBox[{"-", "5.999999999999999`"}], 
        RowBox[{"-", "12.000000000000002`"}]},
       {
        RowBox[{"-", "12.000000000000002`"}], "5.999999999999999`", 
        "24.000000000000004`", 
        RowBox[{"-", "5.999999999999999`"}], "0", 
        RowBox[{"-", "6.`"}], 
        RowBox[{"-", "12.`"}], "6.`"},
       {
        RowBox[{"-", "5.999999999999999`"}], "0", 
        RowBox[{"-", "5.999999999999999`"}], "24.000000000000004`", 
        "5.999999999999999`", 
        RowBox[{"-", "12.000000000000002`"}], "5.999999999999999`", 
        RowBox[{"-", "11.999999999999998`"}]},
       {
        RowBox[{"-", "12.`"}], 
        RowBox[{"-", "5.999999999999999`"}], "0", "5.999999999999999`", 
        "24.000000000000004`", "6.`", 
        RowBox[{"-", "12.000000000000002`"}], 
        RowBox[{"-", "6.`"}]},
       {
        RowBox[{"-", "6.`"}], 
        RowBox[{"-", "11.999999999999998`"}], 
        RowBox[{"-", "6.`"}], 
        RowBox[{"-", "12.000000000000002`"}], "6.`", "24.000000000000004`", 
        "6.`", "0"},
       {"0", 
        RowBox[{"-", "5.999999999999999`"}], 
        RowBox[{"-", "12.`"}], "5.999999999999999`", 
        RowBox[{"-", "12.000000000000002`"}], "6.`", "24.000000000000004`", 
        RowBox[{"-", "6.`"}]},
       {"6.`", 
        RowBox[{"-", "12.000000000000002`"}], "6.`", 
        RowBox[{"-", "11.999999999999998`"}], 
        RowBox[{"-", "6.`"}], "0", 
        RowBox[{"-", "6.`"}], "24.000000000000004`"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]]}],
  SequenceForm["Ke=", 
   MatrixForm[{{
     24., 5.999999999999999, -12.000000000000002`, -5.999999999999999, -12., \
-6., 0, 6.}, {
     5.999999999999999, 24.000000000000004`, 5.999999999999999, 
      0, -5.999999999999999, -11.999999999999998`, -5.999999999999999, \
-12.000000000000002`}, {-12.000000000000002`, 5.999999999999999, 
      24.000000000000004`, -5.999999999999999, 0, -6., -12., 
      6.}, {-5.999999999999999, 0, -5.999999999999999, 24.000000000000004`, 
      5.999999999999999, -12.000000000000002`, 
      5.999999999999999, -11.999999999999998`}, {-12., -5.999999999999999, 0, 
      5.999999999999999, 24.000000000000004`, 
      6., -12.000000000000002`, -6.}, {-6., -11.999999999999998`, -6., \
-12.000000000000002`, 6., 24.000000000000004`, 6., 0}, {
     0, -5.999999999999999, -12., 5.999999999999999, -12.000000000000002`, 6.,
       24.000000000000004`, -6.}, {
     6., -12.000000000000002`, 6., -11.999999999999998`, -6., 0, -6., 
      24.000000000000004`}}]],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.591987132699904*^9, 3.5919871647855053`*^9, {3.592056432548193*^9, 
   3.5920564615681458`*^9}, 3.5920566067869053`*^9, 3.5920567468358088`*^9, 
   3.59205731441578*^9, 3.5920573572177677`*^9, 3.592057389409814*^9, 
   3.5920647359316607`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Eigenvalues of Ke=\"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "48.`", ",", "47.99999999999998`", ",", "47.99999999999997`", ",", 
     "24.000000000000018`", ",", "24.000000000000004`", ",", "0", ",", "0", 
     ",", "0"}], "}"}]}],
  SequenceForm[
  "Eigenvalues of Ke=", {
   48., 47.99999999999998, 47.99999999999997, 24.000000000000018`, 
    24.000000000000004`, 0, 0, 0}],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.591987132699904*^9, 3.5919871647855053`*^9, {3.592056432548193*^9, 
   3.5920564615681458`*^9}, 3.5920566067869053`*^9, 3.5920567468358088`*^9, 
   3.59205731441578*^9, 3.5920573572177677`*^9, 3.592057389409814*^9, 
   3.5920647359335012`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Gauss integration rule: \"\>", "\[InvisibleSpace]", "4", 
   "\[InvisibleSpace]", "\<\" x \"\>", "\[InvisibleSpace]", "4"}],
  SequenceForm["Gauss integration rule: ", 4, " x ", 4],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.591987132699904*^9, 3.5919871647855053`*^9, {3.592056432548193*^9, 
   3.5920564615681458`*^9}, 3.5920566067869053`*^9, 3.5920567468358088`*^9, 
   3.59205731441578*^9, 3.5920573572177677`*^9, 3.592057389409814*^9, 
   3.592064735934903*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Ke=\"\>", "\[InvisibleSpace]", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"24.`", "6.`", 
        RowBox[{"-", "11.999999999999998`"}], 
        RowBox[{"-", "6.`"}], 
        RowBox[{"-", "11.999999999999998`"}], 
        RowBox[{"-", "5.999999999999999`"}], "0", "5.999999999999999`"},
       {"6.000000000000001`", "23.999999999999993`", "5.999999999999999`", 
        "0", 
        RowBox[{"-", "5.999999999999999`"}], 
        RowBox[{"-", "11.999999999999998`"}], 
        RowBox[{"-", "6.000000000000001`"}], 
        RowBox[{"-", "11.999999999999998`"}]},
       {
        RowBox[{"-", "11.999999999999996`"}], "6.`", "23.999999999999996`", 
        RowBox[{"-", "6.`"}], "0", 
        RowBox[{"-", "5.999999999999999`"}], 
        RowBox[{"-", "11.999999999999998`"}], "5.999999999999999`"},
       {
        RowBox[{"-", "6.000000000000001`"}], "0", 
        RowBox[{"-", "5.999999999999999`"}], "23.999999999999993`", 
        "5.999999999999999`", 
        RowBox[{"-", "11.999999999999996`"}], "6.000000000000001`", 
        RowBox[{"-", "11.999999999999998`"}]},
       {
        RowBox[{"-", "11.999999999999998`"}], 
        RowBox[{"-", "6.`"}], "0", "6.`", "23.999999999999996`", 
        "5.999999999999999`", 
        RowBox[{"-", "11.999999999999995`"}], 
        RowBox[{"-", "5.999999999999999`"}]},
       {
        RowBox[{"-", "5.999999999999999`"}], 
        RowBox[{"-", "11.999999999999998`"}], 
        RowBox[{"-", "5.999999999999999`"}], 
        RowBox[{"-", "11.999999999999996`"}], "5.999999999999999`", 
        "23.999999999999996`", "5.999999999999999`", "0"},
       {"0", 
        RowBox[{"-", "6.`"}], 
        RowBox[{"-", "11.999999999999998`"}], "6.`", 
        RowBox[{"-", "11.999999999999995`"}], "5.999999999999999`", 
        "23.999999999999996`", 
        RowBox[{"-", "5.999999999999999`"}]},
       {"5.999999999999999`", 
        RowBox[{"-", "11.999999999999996`"}], "5.999999999999999`", 
        RowBox[{"-", "11.999999999999998`"}], 
        RowBox[{"-", "5.999999999999999`"}], "0", 
        RowBox[{"-", "5.999999999999999`"}], "23.999999999999996`"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]]}],
  SequenceForm["Ke=", 
   MatrixForm[{{
     24., 6., -11.999999999999998`, -6., -11.999999999999998`, \
-5.999999999999999, 0, 5.999999999999999}, {
     6.000000000000001, 23.999999999999993`, 5.999999999999999, 
      0, -5.999999999999999, -11.999999999999998`, -6.000000000000001, \
-11.999999999999998`}, {-11.999999999999996`, 6., 23.999999999999996`, -6., 
      0, -5.999999999999999, -11.999999999999998`, 
      5.999999999999999}, {-6.000000000000001, 0, -5.999999999999999, 
      23.999999999999993`, 5.999999999999999, -11.999999999999996`, 
      6.000000000000001, -11.999999999999998`}, {-11.999999999999998`, -6., 0,
       6., 23.999999999999996`, 
      5.999999999999999, -11.999999999999995`, -5.999999999999999}, \
{-5.999999999999999, -11.999999999999998`, -5.999999999999999, \
-11.999999999999996`, 5.999999999999999, 23.999999999999996`, 
      5.999999999999999, 0}, {
     0, -6., -11.999999999999998`, 6., -11.999999999999995`, 
      5.999999999999999, 23.999999999999996`, -5.999999999999999}, {
     5.999999999999999, -11.999999999999996`, 
      5.999999999999999, -11.999999999999998`, -5.999999999999999, 
      0, -5.999999999999999, 23.999999999999996`}}]],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.591987132699904*^9, 3.5919871647855053`*^9, {3.592056432548193*^9, 
   3.5920564615681458`*^9}, 3.5920566067869053`*^9, 3.5920567468358088`*^9, 
   3.59205731441578*^9, 3.5920573572177677`*^9, 3.592057389409814*^9, 
   3.592064735936561*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Eigenvalues of Ke=\"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "48.000000000000036`", ",", "48.00000000000003`", ",", 
     "47.99999999999995`", ",", "23.999999999999996`", ",", 
     "23.999999999999993`", ",", "0", ",", "0", ",", "0"}], "}"}]}],
  SequenceForm[
  "Eigenvalues of Ke=", {
   48.000000000000036`, 48.00000000000003, 47.99999999999995, 
    23.999999999999996`, 23.999999999999993`, 0, 0, 0}],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.591987132699904*^9, 3.5919871647855053`*^9, {3.592056432548193*^9, 
   3.5920564615681458`*^9}, 3.5920566067869053`*^9, 3.5920567468358088`*^9, 
   3.59205731441578*^9, 3.5920573572177677`*^9, 3.592057389409814*^9, 
   3.592064735938308*^9}]
}, Open  ]],

Cell[BoxData[
 FrameBox[
  StyleBox["\<\"Verified that Ke remains constant for p=2,3,4.\"\>",
   StripOnInput->False,
   FontSize->18,
   FontWeight->Bold,
   Background->RGBColor[0.88, 1, 0.88]],
  Background->RGBColor[0.88, 1, 0.88],
  StripOnInput->False]], "Output",
 CellChangeTimes->{
  3.591987164842029*^9, {3.592056432709331*^9, 3.592056461621264*^9}, 
   3.59205660684658*^9, 3.592056746892353*^9, 3.592057314435636*^9, 
   3.59205735927135*^9, 3.5920573894304657`*^9, 3.5920647359397793`*^9}],

Cell[BoxData[
 FrameBox[
  StyleBox["\<\"Verified that for p=1, Ke produces 5 zero eigenvalues \
(wrong-sauce)\"\>",
   StripOnInput->False,
   FontSize->18,
   FontWeight->Bold,
   Background->RGBColor[0.88, 1, 0.88]],
  Background->RGBColor[0.88, 1, 0.88],
  StripOnInput->False]], "Output",
 CellChangeTimes->{
  3.591987164842029*^9, {3.592056432709331*^9, 3.592056461621264*^9}, 
   3.59205660684658*^9, 3.592056746892353*^9, 3.592057314435636*^9, 
   3.59205735927135*^9, 3.5920573894304657`*^9, 3.5920647359409637`*^9}],

Cell[BoxData[
 FrameBox[
  StyleBox["\<\"The entries of h[Bt][E][B][J] are polynomials in \[Xi], \
\[Eta], of order 2 along constant lines of \[Xi] or \[Eta]. So if we try to \
estimate the Gaussian integral of a 2nd order function with a single point, \
erronious answers will arise, as with the p=1 integration. Gaussian \
integrations for p=2,3,4 will produce identical gaussian integrations. Since \
the polynomial is of degree less than 2p-1, the gaussian integration will be \
exact. I.E. the polynomias in \[Xi], \[Eta] along their iso-parametric \
counterparts are of degree 2, which is less than 2p-1 for each of the \
gaussian iterations in p={2,3,4} \"\>",
   StripOnInput->False,
   FontSize->18,
   FontWeight->Bold,
   Background->RGBColor[0.88, 1, 0.88]],
  Background->RGBColor[0.88, 1, 0.88],
  StripOnInput->False]], "Output",
 CellChangeTimes->{
  3.591987164842029*^9, {3.592056432709331*^9, 3.592056461621264*^9}, 
   3.59205660684658*^9, 3.592056746892353*^9, 3.592057314435636*^9, 
   3.59205735927135*^9, 3.5920573894304657`*^9, 3.5920647359421167`*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Problem 2-Book 17.2", "Section",
 CellChangeTimes->{{3.591987170818664*^9, 3.5919871772809267`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", 
   RowBox[{
   "Em", ",", "\[CapitalNu]", ",", "a", ",", "b", ",", "h", ",", 
    "\[CapitalGamma]"}], "]"}], ";", 
  RowBox[{"b", "=", 
   RowBox[{"a", "/", "\[CapitalGamma]"}]}], ";", 
  RowBox[{"ncoor", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"a", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"a", ",", "b"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "b"}], "}"}]}], "}"}]}], ";", 
  RowBox[{"Emat", "=", 
   RowBox[{
    RowBox[{"Em", "/", 
     RowBox[{"(", 
      RowBox[{"1", "-", 
       RowBox[{"\[CapitalNu]", "^", "2"}]}], ")"}]}], "*", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"1", ",", "\[CapitalNu]", ",", "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"\[CapitalNu]", ",", "1", ",", "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0", ",", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"1", "-", "\[CapitalNu]"}], ")"}], "/", "2"}]}], "}"}]}], 
     "}"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Ke", "=", 
   RowBox[{"Quad4IsoPMembraneStiffness", "[", 
    RowBox[{"ncoor", ",", "Emat", ",", "h", ",", 
     RowBox[{"{", 
      RowBox[{"False", ",", "2"}], "}"}]}], "]"}]}], ";", 
  RowBox[{"scaledKe", "=", 
   RowBox[{"Simplify", "[", 
    RowBox[{"Ke", "*", 
     RowBox[{"(", 
      RowBox[{"24", "*", 
       RowBox[{"(", 
        RowBox[{"1", "-", 
         RowBox[{"\[CapitalNu]", "^", "2"}]}], ")"}], "*", 
       RowBox[{"\[CapitalGamma]", "/", 
        RowBox[{"(", 
         RowBox[{"Em", "*", "h"}], ")"}]}]}], ")"}]}], "]"}]}], ";", 
  RowBox[{"Print", "[", 
   RowBox[{"\"\<Ke=\>\"", ",", 
    RowBox[{"Em", "*", 
     RowBox[{"h", "/", 
      RowBox[{"(", 
       RowBox[{"24", "*", "\[CapitalGamma]", "*", 
        RowBox[{"(", 
         RowBox[{"1", "-", 
          RowBox[{"\[CapitalNu]", "^", "2"}]}], ")"}]}], ")"}]}]}], ",", 
    "\"\<*\\n\>\"", ",", 
    RowBox[{"scaledKe", "//", "MatrixForm"}]}], "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.591987897821952*^9, 3.591987897822954*^9}},
 Background->RGBColor[0.87, 0.94, 1]],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Ke=\"\>", "\[InvisibleSpace]", 
   FractionBox[
    RowBox[{"Em", " ", "h"}], 
    RowBox[{"24", " ", "\[CapitalGamma]", " ", 
     RowBox[{"(", 
      RowBox[{"1", "-", 
       SuperscriptBox["\[CapitalNu]", "2"]}], ")"}]}]], 
   "\[InvisibleSpace]", "\<\"*\\n\"\>", "\[InvisibleSpace]", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {
        RowBox[{"8", "-", 
         RowBox[{"4", " ", 
          SuperscriptBox["\[CapitalGamma]", "2"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "\[CapitalNu]"}], ")"}]}]}], 
        RowBox[{"3", " ", "\[CapitalGamma]", " ", 
         RowBox[{"(", 
          RowBox[{"1", "+", "\[CapitalNu]"}], ")"}]}], 
        RowBox[{
         RowBox[{"-", "8"}], "-", 
         RowBox[{"2", " ", 
          SuperscriptBox["\[CapitalGamma]", "2"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "\[CapitalNu]"}], ")"}]}]}], 
        RowBox[{"3", " ", "\[CapitalGamma]", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", 
           RowBox[{"3", " ", "\[CapitalNu]"}]}], ")"}]}], 
        RowBox[{
         RowBox[{"-", "4"}], "+", 
         RowBox[{"2", " ", 
          SuperscriptBox["\[CapitalGamma]", "2"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "\[CapitalNu]"}], ")"}]}]}], 
        RowBox[{
         RowBox[{"-", "3"}], " ", "\[CapitalGamma]", " ", 
         RowBox[{"(", 
          RowBox[{"1", "+", "\[CapitalNu]"}], ")"}]}], 
        RowBox[{"4", "+", 
         RowBox[{"4", " ", 
          SuperscriptBox["\[CapitalGamma]", "2"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "\[CapitalNu]"}], ")"}]}]}], 
        RowBox[{"\[CapitalGamma]", " ", 
         RowBox[{"(", 
          RowBox[{"3", "-", 
           RowBox[{"9", " ", "\[CapitalNu]"}]}], ")"}]}]},
       {
        RowBox[{"3", " ", "\[CapitalGamma]", " ", 
         RowBox[{"(", 
          RowBox[{"1", "+", "\[CapitalNu]"}], ")"}]}], 
        RowBox[{"4", "+", 
         RowBox[{"8", " ", 
          SuperscriptBox["\[CapitalGamma]", "2"]}], "-", 
         RowBox[{"4", " ", "\[CapitalNu]"}]}], 
        RowBox[{"\[CapitalGamma]", " ", 
         RowBox[{"(", 
          RowBox[{"3", "-", 
           RowBox[{"9", " ", "\[CapitalNu]"}]}], ")"}]}], 
        RowBox[{"4", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", 
           SuperscriptBox["\[CapitalGamma]", "2"], "+", "\[CapitalNu]"}], 
          ")"}]}], 
        RowBox[{
         RowBox[{"-", "3"}], " ", "\[CapitalGamma]", " ", 
         RowBox[{"(", 
          RowBox[{"1", "+", "\[CapitalNu]"}], ")"}]}], 
        RowBox[{
         RowBox[{"-", "2"}], "-", 
         RowBox[{"4", " ", 
          SuperscriptBox["\[CapitalGamma]", "2"]}], "+", 
         RowBox[{"2", " ", "\[CapitalNu]"}]}], 
        RowBox[{"3", " ", "\[CapitalGamma]", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", 
           RowBox[{"3", " ", "\[CapitalNu]"}]}], ")"}]}], 
        RowBox[{
         RowBox[{"-", "2"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", 
           RowBox[{"4", " ", 
            SuperscriptBox["\[CapitalGamma]", "2"]}], "+", "\[CapitalNu]"}], 
          ")"}]}]},
       {
        RowBox[{
         RowBox[{"-", "8"}], "-", 
         RowBox[{"2", " ", 
          SuperscriptBox["\[CapitalGamma]", "2"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "\[CapitalNu]"}], ")"}]}]}], 
        RowBox[{"\[CapitalGamma]", " ", 
         RowBox[{"(", 
          RowBox[{"3", "-", 
           RowBox[{"9", " ", "\[CapitalNu]"}]}], ")"}]}], 
        RowBox[{"8", "-", 
         RowBox[{"4", " ", 
          SuperscriptBox["\[CapitalGamma]", "2"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "\[CapitalNu]"}], ")"}]}]}], 
        RowBox[{
         RowBox[{"-", "3"}], " ", "\[CapitalGamma]", " ", 
         RowBox[{"(", 
          RowBox[{"1", "+", "\[CapitalNu]"}], ")"}]}], 
        RowBox[{"4", "+", 
         RowBox[{"4", " ", 
          SuperscriptBox["\[CapitalGamma]", "2"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "\[CapitalNu]"}], ")"}]}]}], 
        RowBox[{"3", " ", "\[CapitalGamma]", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", 
           RowBox[{"3", " ", "\[CapitalNu]"}]}], ")"}]}], 
        RowBox[{
         RowBox[{"-", "4"}], "+", 
         RowBox[{"2", " ", 
          SuperscriptBox["\[CapitalGamma]", "2"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "\[CapitalNu]"}], ")"}]}]}], 
        RowBox[{"3", " ", "\[CapitalGamma]", " ", 
         RowBox[{"(", 
          RowBox[{"1", "+", "\[CapitalNu]"}], ")"}]}]},
       {
        RowBox[{"3", " ", "\[CapitalGamma]", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", 
           RowBox[{"3", " ", "\[CapitalNu]"}]}], ")"}]}], 
        RowBox[{"4", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", 
           SuperscriptBox["\[CapitalGamma]", "2"], "+", "\[CapitalNu]"}], 
          ")"}]}], 
        RowBox[{
         RowBox[{"-", "3"}], " ", "\[CapitalGamma]", " ", 
         RowBox[{"(", 
          RowBox[{"1", "+", "\[CapitalNu]"}], ")"}]}], 
        RowBox[{"4", "+", 
         RowBox[{"8", " ", 
          SuperscriptBox["\[CapitalGamma]", "2"]}], "-", 
         RowBox[{"4", " ", "\[CapitalNu]"}]}], 
        RowBox[{"\[CapitalGamma]", " ", 
         RowBox[{"(", 
          RowBox[{"3", "-", 
           RowBox[{"9", " ", "\[CapitalNu]"}]}], ")"}]}], 
        RowBox[{
         RowBox[{"-", "2"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", 
           RowBox[{"4", " ", 
            SuperscriptBox["\[CapitalGamma]", "2"]}], "+", "\[CapitalNu]"}], 
          ")"}]}], 
        RowBox[{"3", " ", "\[CapitalGamma]", " ", 
         RowBox[{"(", 
          RowBox[{"1", "+", "\[CapitalNu]"}], ")"}]}], 
        RowBox[{
         RowBox[{"-", "2"}], "-", 
         RowBox[{"4", " ", 
          SuperscriptBox["\[CapitalGamma]", "2"]}], "+", 
         RowBox[{"2", " ", "\[CapitalNu]"}]}]},
       {
        RowBox[{
         RowBox[{"-", "4"}], "+", 
         RowBox[{"2", " ", 
          SuperscriptBox["\[CapitalGamma]", "2"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "\[CapitalNu]"}], ")"}]}]}], 
        RowBox[{
         RowBox[{"-", "3"}], " ", "\[CapitalGamma]", " ", 
         RowBox[{"(", 
          RowBox[{"1", "+", "\[CapitalNu]"}], ")"}]}], 
        RowBox[{"4", "+", 
         RowBox[{"4", " ", 
          SuperscriptBox["\[CapitalGamma]", "2"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "\[CapitalNu]"}], ")"}]}]}], 
        RowBox[{"\[CapitalGamma]", " ", 
         RowBox[{"(", 
          RowBox[{"3", "-", 
           RowBox[{"9", " ", "\[CapitalNu]"}]}], ")"}]}], 
        RowBox[{"8", "-", 
         RowBox[{"4", " ", 
          SuperscriptBox["\[CapitalGamma]", "2"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "\[CapitalNu]"}], ")"}]}]}], 
        RowBox[{"3", " ", "\[CapitalGamma]", " ", 
         RowBox[{"(", 
          RowBox[{"1", "+", "\[CapitalNu]"}], ")"}]}], 
        RowBox[{
         RowBox[{"-", "8"}], "-", 
         RowBox[{"2", " ", 
          SuperscriptBox["\[CapitalGamma]", "2"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "\[CapitalNu]"}], ")"}]}]}], 
        RowBox[{"3", " ", "\[CapitalGamma]", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", 
           RowBox[{"3", " ", "\[CapitalNu]"}]}], ")"}]}]},
       {
        RowBox[{
         RowBox[{"-", "3"}], " ", "\[CapitalGamma]", " ", 
         RowBox[{"(", 
          RowBox[{"1", "+", "\[CapitalNu]"}], ")"}]}], 
        RowBox[{
         RowBox[{"-", "2"}], "-", 
         RowBox[{"4", " ", 
          SuperscriptBox["\[CapitalGamma]", "2"]}], "+", 
         RowBox[{"2", " ", "\[CapitalNu]"}]}], 
        RowBox[{"3", " ", "\[CapitalGamma]", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", 
           RowBox[{"3", " ", "\[CapitalNu]"}]}], ")"}]}], 
        RowBox[{
         RowBox[{"-", "2"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", 
           RowBox[{"4", " ", 
            SuperscriptBox["\[CapitalGamma]", "2"]}], "+", "\[CapitalNu]"}], 
          ")"}]}], 
        RowBox[{"3", " ", "\[CapitalGamma]", " ", 
         RowBox[{"(", 
          RowBox[{"1", "+", "\[CapitalNu]"}], ")"}]}], 
        RowBox[{"4", "+", 
         RowBox[{"8", " ", 
          SuperscriptBox["\[CapitalGamma]", "2"]}], "-", 
         RowBox[{"4", " ", "\[CapitalNu]"}]}], 
        RowBox[{"\[CapitalGamma]", " ", 
         RowBox[{"(", 
          RowBox[{"3", "-", 
           RowBox[{"9", " ", "\[CapitalNu]"}]}], ")"}]}], 
        RowBox[{"4", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", 
           SuperscriptBox["\[CapitalGamma]", "2"], "+", "\[CapitalNu]"}], 
          ")"}]}]},
       {
        RowBox[{"4", "+", 
         RowBox[{"4", " ", 
          SuperscriptBox["\[CapitalGamma]", "2"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "\[CapitalNu]"}], ")"}]}]}], 
        RowBox[{"3", " ", "\[CapitalGamma]", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", 
           RowBox[{"3", " ", "\[CapitalNu]"}]}], ")"}]}], 
        RowBox[{
         RowBox[{"-", "4"}], "+", 
         RowBox[{"2", " ", 
          SuperscriptBox["\[CapitalGamma]", "2"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "\[CapitalNu]"}], ")"}]}]}], 
        RowBox[{"3", " ", "\[CapitalGamma]", " ", 
         RowBox[{"(", 
          RowBox[{"1", "+", "\[CapitalNu]"}], ")"}]}], 
        RowBox[{
         RowBox[{"-", "8"}], "-", 
         RowBox[{"2", " ", 
          SuperscriptBox["\[CapitalGamma]", "2"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "\[CapitalNu]"}], ")"}]}]}], 
        RowBox[{"\[CapitalGamma]", " ", 
         RowBox[{"(", 
          RowBox[{"3", "-", 
           RowBox[{"9", " ", "\[CapitalNu]"}]}], ")"}]}], 
        RowBox[{"8", "-", 
         RowBox[{"4", " ", 
          SuperscriptBox["\[CapitalGamma]", "2"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "\[CapitalNu]"}], ")"}]}]}], 
        RowBox[{
         RowBox[{"-", "3"}], " ", "\[CapitalGamma]", " ", 
         RowBox[{"(", 
          RowBox[{"1", "+", "\[CapitalNu]"}], ")"}]}]},
       {
        RowBox[{"\[CapitalGamma]", " ", 
         RowBox[{"(", 
          RowBox[{"3", "-", 
           RowBox[{"9", " ", "\[CapitalNu]"}]}], ")"}]}], 
        RowBox[{
         RowBox[{"-", "2"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", 
           RowBox[{"4", " ", 
            SuperscriptBox["\[CapitalGamma]", "2"]}], "+", "\[CapitalNu]"}], 
          ")"}]}], 
        RowBox[{"3", " ", "\[CapitalGamma]", " ", 
         RowBox[{"(", 
          RowBox[{"1", "+", "\[CapitalNu]"}], ")"}]}], 
        RowBox[{
         RowBox[{"-", "2"}], "-", 
         RowBox[{"4", " ", 
          SuperscriptBox["\[CapitalGamma]", "2"]}], "+", 
         RowBox[{"2", " ", "\[CapitalNu]"}]}], 
        RowBox[{"3", " ", "\[CapitalGamma]", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", 
           RowBox[{"3", " ", "\[CapitalNu]"}]}], ")"}]}], 
        RowBox[{"4", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", 
           SuperscriptBox["\[CapitalGamma]", "2"], "+", "\[CapitalNu]"}], 
          ")"}]}], 
        RowBox[{
         RowBox[{"-", "3"}], " ", "\[CapitalGamma]", " ", 
         RowBox[{"(", 
          RowBox[{"1", "+", "\[CapitalNu]"}], ")"}]}], 
        RowBox[{"4", "+", 
         RowBox[{"8", " ", 
          SuperscriptBox["\[CapitalGamma]", "2"]}], "-", 
         RowBox[{"4", " ", "\[CapitalNu]"}]}]}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]]}],
  SequenceForm[
  "Ke=", Rational[
    1, 24] $CellContext`Em $CellContext`h $CellContext`\[CapitalGamma]^(-1)/(
   1 - $CellContext`\[CapitalNu]^2), "*\n", 
   MatrixForm[{{
     8 - 4 $CellContext`\[CapitalGamma]^2 (-1 + $CellContext`\[CapitalNu]), 
      3 $CellContext`\[CapitalGamma] (1 + $CellContext`\[CapitalNu]), -8 - 
      2 $CellContext`\[CapitalGamma]^2 (-1 + $CellContext`\[CapitalNu]), 
      3 $CellContext`\[CapitalGamma] (-1 + 3 $CellContext`\[CapitalNu]), -4 + 
      2 $CellContext`\[CapitalGamma]^2 (-1 + $CellContext`\[CapitalNu]), (-3) \
$CellContext`\[CapitalGamma] (1 + $CellContext`\[CapitalNu]), 4 + 
      4 $CellContext`\[CapitalGamma]^2 (-1 + $CellContext`\[CapitalNu]), \
$CellContext`\[CapitalGamma] (3 - 9 $CellContext`\[CapitalNu])}, {
     3 $CellContext`\[CapitalGamma] (1 + $CellContext`\[CapitalNu]), 4 + 
      8 $CellContext`\[CapitalGamma]^2 - 
      4 $CellContext`\[CapitalNu], $CellContext`\[CapitalGamma] (3 - 
       9 $CellContext`\[CapitalNu]), 
      4 (-1 + $CellContext`\[CapitalGamma]^2 + $CellContext`\[CapitalNu]), \
(-3) $CellContext`\[CapitalGamma] (1 + $CellContext`\[CapitalNu]), -2 - 
      4 $CellContext`\[CapitalGamma]^2 + 2 $CellContext`\[CapitalNu], 
      3 $CellContext`\[CapitalGamma] (-1 + 
       3 $CellContext`\[CapitalNu]), (-2) (-1 + 
       4 $CellContext`\[CapitalGamma]^2 + $CellContext`\[CapitalNu])}, {-8 - 
      2 $CellContext`\[CapitalGamma]^2 (-1 + $CellContext`\[CapitalNu]), \
$CellContext`\[CapitalGamma] (3 - 9 $CellContext`\[CapitalNu]), 8 - 
      4 $CellContext`\[CapitalGamma]^2 (-1 + $CellContext`\[CapitalNu]), (-3) \
$CellContext`\[CapitalGamma] (1 + $CellContext`\[CapitalNu]), 4 + 
      4 $CellContext`\[CapitalGamma]^2 (-1 + $CellContext`\[CapitalNu]), 
      3 $CellContext`\[CapitalGamma] (-1 + 3 $CellContext`\[CapitalNu]), -4 + 
      2 $CellContext`\[CapitalGamma]^2 (-1 + $CellContext`\[CapitalNu]), 
      3 $CellContext`\[CapitalGamma] (1 + $CellContext`\[CapitalNu])}, {
     3 $CellContext`\[CapitalGamma] (-1 + 3 $CellContext`\[CapitalNu]), 
      4 (-1 + $CellContext`\[CapitalGamma]^2 + $CellContext`\[CapitalNu]), \
(-3) $CellContext`\[CapitalGamma] (1 + $CellContext`\[CapitalNu]), 4 + 
      8 $CellContext`\[CapitalGamma]^2 - 
      4 $CellContext`\[CapitalNu], $CellContext`\[CapitalGamma] (3 - 
       9 $CellContext`\[CapitalNu]), (-2) (-1 + 
       4 $CellContext`\[CapitalGamma]^2 + $CellContext`\[CapitalNu]), 
      3 $CellContext`\[CapitalGamma] (1 + $CellContext`\[CapitalNu]), -2 - 
      4 $CellContext`\[CapitalGamma]^2 + 2 $CellContext`\[CapitalNu]}, {-4 + 
      2 $CellContext`\[CapitalGamma]^2 (-1 + $CellContext`\[CapitalNu]), (-3) \
$CellContext`\[CapitalGamma] (1 + $CellContext`\[CapitalNu]), 4 + 
      4 $CellContext`\[CapitalGamma]^2 (-1 + $CellContext`\[CapitalNu]), \
$CellContext`\[CapitalGamma] (3 - 9 $CellContext`\[CapitalNu]), 8 - 
      4 $CellContext`\[CapitalGamma]^2 (-1 + $CellContext`\[CapitalNu]), 
      3 $CellContext`\[CapitalGamma] (1 + $CellContext`\[CapitalNu]), -8 - 
      2 $CellContext`\[CapitalGamma]^2 (-1 + $CellContext`\[CapitalNu]), 
      3 $CellContext`\[CapitalGamma] (-1 + 
       3 $CellContext`\[CapitalNu])}, {(-3) $CellContext`\[CapitalGamma] (
       1 + $CellContext`\[CapitalNu]), -2 - 4 $CellContext`\[CapitalGamma]^2 + 
      2 $CellContext`\[CapitalNu], 
      3 $CellContext`\[CapitalGamma] (-1 + 
       3 $CellContext`\[CapitalNu]), (-2) (-1 + 
       4 $CellContext`\[CapitalGamma]^2 + $CellContext`\[CapitalNu]), 
      3 $CellContext`\[CapitalGamma] (1 + $CellContext`\[CapitalNu]), 4 + 
      8 $CellContext`\[CapitalGamma]^2 - 
      4 $CellContext`\[CapitalNu], $CellContext`\[CapitalGamma] (3 - 
       9 $CellContext`\[CapitalNu]), 
      4 (-1 + $CellContext`\[CapitalGamma]^2 + $CellContext`\[CapitalNu])}, {
     4 + 4 $CellContext`\[CapitalGamma]^2 (-1 + $CellContext`\[CapitalNu]), 
      3 $CellContext`\[CapitalGamma] (-1 + 3 $CellContext`\[CapitalNu]), -4 + 
      2 $CellContext`\[CapitalGamma]^2 (-1 + $CellContext`\[CapitalNu]), 
      3 $CellContext`\[CapitalGamma] (1 + $CellContext`\[CapitalNu]), -8 - 
      2 $CellContext`\[CapitalGamma]^2 (-1 + $CellContext`\[CapitalNu]), \
$CellContext`\[CapitalGamma] (3 - 9 $CellContext`\[CapitalNu]), 8 - 
      4 $CellContext`\[CapitalGamma]^2 (-1 + $CellContext`\[CapitalNu]), (-3) \
$CellContext`\[CapitalGamma] (
       1 + $CellContext`\[CapitalNu])}, {$CellContext`\[CapitalGamma] (3 - 
       9 $CellContext`\[CapitalNu]), (-2) (-1 + 
       4 $CellContext`\[CapitalGamma]^2 + $CellContext`\[CapitalNu]), 
      3 $CellContext`\[CapitalGamma] (1 + $CellContext`\[CapitalNu]), -2 - 
      4 $CellContext`\[CapitalGamma]^2 + 2 $CellContext`\[CapitalNu], 
      3 $CellContext`\[CapitalGamma] (-1 + 3 $CellContext`\[CapitalNu]), 
      4 (-1 + $CellContext`\[CapitalGamma]^2 + $CellContext`\[CapitalNu]), \
(-3) $CellContext`\[CapitalGamma] (1 + $CellContext`\[CapitalNu]), 4 + 
      8 $CellContext`\[CapitalGamma]^2 - 4 $CellContext`\[CapitalNu]}}]],
  Editable->False]], "Print",
 CellChangeTimes->{3.591987905569894*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"PrintWithStyle", "[", 
  "\"\<Ke calcualted above matches that given in E17.5. There are no typos \
that I can see...\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.5919880633910418`*^9, 3.591988092948175*^9}}],

Cell[BoxData[
 FrameBox[
  StyleBox["\<\"Ke calcualted above matches that given in E17.5. There are no \
typos that I can see...\"\>",
   StripOnInput->False,
   FontSize->18,
   FontWeight->Bold,
   Background->RGBColor[0.88, 1, 0.88]],
  Background->RGBColor[0.88, 1, 0.88],
  StripOnInput->False]], "Output",
 CellChangeTimes->{3.591988094195149*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Problem 3-Book 18.1", "Section",
 CellChangeTimes->{{3.591989741466721*^9, 3.5919897485289087`*^9}}],

Cell[TextData[{
 "Given the following Triangle, \n\ta) solve for ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["N", "1"], 
    SubscriptBox["N", 
     RowBox[{"4", ","}]], "and", " ", 
    RowBox[{
     SubscriptBox["N", "0"], ".", " "}]}], TraditionalForm]],
  FormatType->"TraditionalForm"]
}], "Text",
 CellChangeTimes->{{3.5919897624928713`*^9, 3.591989833182466*^9}},
 Background->GrayLevel[0.85]],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
nsfjFf747fc//vR9P/gIfhSlv7fnqfLYU0WppyJUoz99/7SmpyJmT5XTnjJN
O2tO4bIfv/32x59+7O99IN3/9709D2aVjZohjPZUVE3K8GA/rFX1VLNqBDYm
+LebjCImPv62v7vr0Y+ztGpuBa3psmxT5bPGeNqAZwWvZhMNm2a3CeG4cWG0
x9/+JBV3myHM9VRT62kto2CIO7t7vx+daJZUAu+jj8Z7N6so3Itrf81lxqmz
dKLWp1Niljpn0yKb7PW0qp7t0eNvvx3o6+oan0vTpvHU8Zo+QOPzeKj/waOv
4Wk0VRVwSmN+SYvv2Wk81NcLTAGr3g0P9D+QyqBNrXDasE6dJJPadzPF92YO
2fheJjTXHkkNPwKcwKNH8A274/U8z9qTc2Oy8eMOZGSoH/53cGo7P/sc3kU/
fDvBcP+jB31SU0ybrs+oJo4xddSmTOAZG0+Xepuu+4cwC1NUlQama441PqyT
KnWhg87Cj4P4prVMl5n66KmQ147Qd2Zu2eKB9q3uaQmEHwz/aorkV3Y4/FAG
LCXlz+4d6a+GhcXQfsFnA8C//oFBZ6WyTbDU8zSdri/HRKiKqgsCibDoFMA/
WXRyXMRsmnLaxJSZoZ01u1JWf3W0dP9BwUGeYEeBQcHw/qV6v88XgpsQVRt/
Tn6oG1bTEvYOtEjla3pGngxWh6ADS8H78Nfg7qH92T1P5tQum6mgNVWWbXi6
fNYYTxvwAqJhI/11k3bbfiV6XDjuyRDVlxgqgUWvQVWS3uEZwlxPNbXGF4Ch
/BAPv2hJNTsYfuJ46AnsE+DBg43iS+ueQxTuJbS/Pp/DjE9m0f4aeKpLNr3O
WRXensrlTatqeo8G+2mwmeAewZpovpSBadN4eKriWc6lKQM00keWzmMwfT3B
9PEPDB5TBewemtGY52rxzTqNh+AnYVEhwJqDdfBjul9OqbCiu2ZyWAPYTVPs
/FT7brr43uDMIZs4WGiesObaQH8dMKp0og6EoNCS/oGJeua09kQN0xr/sJMm
zUlHOsnw1wemTL/d15JBf06W9ktVI9Dsns+nT9eZqonPuqmPJofymY1nSL1N
1f37vfzln4zpqkozNccmVcJgdRrwyXSZqVn1xMa2HBzuFUpVpMcWlClbDlaz
Jb3gQAM1jWtA+YbAjxWNSJXHhsZeRHd+OUNRqnvKM+OoCRne8Z3OVE6DmakS
Nqdw2TDFw6MUbhno8piYlbTvg78gBDcpqjZpSJqHVP9tuA5MdFgpiBIi6R+Z
lEwZkcrI/2tO7bKZClrTZNmmy2eN72+yAS8mGjbFbhPC2kMt4KiBz+T2kMck
d2YIc02VEYOB7Rw6diBVn4SHb1IbcLgl1CO0ZXZRuJfT/hqY1Yyzan9NTonp
dbbPoUU23utpVT3To6fKz9IfxWgZmDaNpyiezdDNg4eDeLJ6ws51T8ZFcppm
NOZ5WnyzTWOYoToSaMnwmCmemSeTwzrdzhPad7OL700O2RQ/QEOjrsBaqYEo
qRZc58mQ0idPJuuZy9oTK8iMxk/MyZEJJaWph21LKJF4pXNsFzOP08EZqomz
uqmJCTxj45nH7FTdPyQBmIupqkpzao6N9AvB4VEzXWZqVj2xsS0HR/pzQgLJ
QuHJsYTi6ZYjzdSQk2QhDcxL8qR42uCTqcpj8IuHMxSlpmtGjfuWsdfPKKfB
zFQJm1O4bFzm7pdko2YKoz0rOjdYF4ryTcynnAQHpn9UYkgIrD07udmE9Nkc
2mXPKGhNl2WbJp813sHJBryYaNgUu01qjvWDTMCfVldHCwygTDu0x4S5psqI
jZsUdWXMW0qdW8ukwBr4CDiTuUThXkr7a1Yzzqr99eyUkL6onEOLbLLXT6v6
cu4ePXnSdxLlUTc4bRpPNciMARqzwDONqZnRmOdo8c06jceO0NJAtG9iWmgI
e+iZeTL1cJhq5/GOzCq+h5rW4MlRAjF0VL7gpFRzLS0qhCZNbScNMoe1x2uY
2fhn/P80Gbp+CUiiqYlgF0MzjtPvOmeoJj41wlQ3NTaUQzM2fkbqbYruH3Jt
YHamqyo9ozkGRi2qY/QJ/OMXIPf8eLrM1MAUIa8ZW34nlYr6afRHMPxRHd+O
TG451ALiuo7R0e5oIjGq+Yk0/o+WOq8J5bER6YvvZihKjYtQjY7AgcTERBoX
kpqpnAZ/NFMlbGgu4bKJnzmYLr31jGzUTCG4SVG1KbIWfbBmVWD18EApejw/
fTIhQTb+4l9zapfNUNCqnybLNl0+a2xnTxsw/EKiYVPs9tTUpVf8r+SUNHc9
HvttthnCXE81tcYFWVuAnUukl3c6oomelO7hicQBPikcUje7KNxLa3/NYsZZ
tb+mTokpdbbPoUU23utpVX0+s0dS/5z4PXwGvxaNDuhomzaNpyREM3TzYO/q
EdX5jA1nNuZ5WnyzTePxpvewJ0wxU2nt6bBOt/Ok9t0M8b3vpg/ZVFfQB/8K
Hrp0YLgaHoDx3GRyAs9h7Yn4f0bj/wFnT80/jn5bFzL2S2pTD1vQC7b/+C5m
HKeNn8xQTZzVTY0P5Uj/9I2/nHHMPpyi+wf39FcoQ/7pmaGqNENzbOxcX0h0
iCcpqGUAVlSfIjP11VQhrxlbAj87phQFa8uh3069MLHlSE+w9IOz8JUCkrCz
KRikfcHs3t7qAFjJStLTXQq/iC4dmK4oNS5CdTkL1owiBVeDBX2KiNkM5bSx
nk3VzppLKWuwkw0rzrE7e+vIsPiVpLO7NFr6lZ7nC8FNiKqRp6pdSTWrhuFj
MCBUqm42LkEm6e6RvgioG/huLu2y6Qpaw9Nk2Vi5T+WzJvo32YDqvBcQDRvs
nrTbU+G4kd7AKeJuLQ/vzhTmmtDUmrjXbqSTHYwmnQTJul9AdC98EQS2irCz
WwjvMaDu87uziMK9vPbXM2acXftrfEqE0mbU+dlsWmSTvX44raqZPRq7XuMX
EhpA8pSKxU2dxsES0eR4TR8gYSMb/jO4pa9HahK4MWRpq+7cmdaY52vxzTaN
xxiI9js7Zopp82Tg6bBOs/PApPbdwHTxvaGZQzb1t1qGWoKCpElrC/mscGxv
T+uZy9oTl3lmqBcO0qRScfB1NZIfrbL6aTvH+lMXHTy+i6Hp03WmauKzburT
yQn8zMbTpd6Gpur+/QplyL8K01WVpqoowUkxuXNkuubTrDJTs2w5qZL17P5e
VIv7F9TSplc6i+7XXLJPL6qU9VzZqOeLqv2qWqf1d7os2yzyWb9R72qwk+J/
pVoqYDbyQBIaPes1smf3MQxr/j2n7tls++q1v56p8nkzZ0ZVU3okvV+LMjhN
dnCuafw83bznNOb502YO+brnVTj127Pb+fcW35uLGY1/kZ6Mbzl9uj6jmjj+
7qwTYObG0+uaqvv3OyhD/rUYEgbCElEvIP3y4lsi/FHokwTDcadU3C0giDyr
GPJfjR7pPO5E5jECwlBfi1QiqrP3lx6bevEtEf5IDPZ1t9S1dPcid8eNMQRr
oknnMbIYIiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgIPwOjM53AxAQXgHfP6ijUaIppb3z3RAEhD8mP3VK2NGh
0S0DI/Pdkj8Rw4N9jx9//e33U/78+uvH/YPDE0YeHe7r7RtCTP5bGRns7wem
/XH8z+H+vv4xQ8Of9UuIxBAJOzRU8pf0/6MwXz189O/vv//ljRH+tDzvGGmJ
8vWnCMlBwS1D89nEPxtDvZRAIgpFrBuU/jncS/FFodEh3WN/Dn0UFUJmkwND
6wbms5F/BoZb2CEoFCowv0/651CnMBSFQtM6YcN2k319yaV9/YN/tWUWuP3h
H35IC/5w/RIzTbTs+jVr5rtFCPPIc46R3pMoX2Fnz8DQ8Dy38U9HL80fjUb5
p3WP/dkS6kvpHjdySzQRHRhNY5ciKdfvwEApWFlRxKixpXSkh+IRUjf2Sa/w
rOdJMo3C7vlrrADSeH80j5y6G29tJqfsrL7obbeNOFOcnZ3dfDcNYV6Z8xgZ
oAQERNNoNEn3X+IIeX0MkP0DyWR/FOpkL2zZ/hBiYM+4iYconh7CvsH+7u7+
/8VVd3T0px9/bE2h3i2rnu+mwPTQToZQyCDXSuuGM9jOaN/ozqep7PDQn/8c
25jbb5IUBzqutJRVdUQp71ddErp6Z7mkvv5m17JlRp6envPdRoQpjL7uq63P
PUZGhpDg/3dnoNTXXzIy3OmBQl2pG3wyKPEIlEx+ONRbTSHT6noH57GBLw2Y
tKOj94RF+Rv3FSyyObfYEjIxm+82PYEXU1//7pFhoT/ItYCFh6I9Arv/GtN5
zO0/7Lp7ZsNWRzUdrJzKRkOrUwuhLN8jlI2H6Isd8hWwFA1IT15569at891Y
hKeUHA/56t5Hr3GHf91jZL7oLz0ZyIavOZaGoFG+1I78kJDS/vlu1K9C6vYf
1TVnET0l2iSB4XLGlqBiRmFg4AlHR8f5bhyYy3W+vhQwl4dayCiUR0lHfmCg
8H814B8d58kvlb913y9JTDvuuIqEUjJDKexCaaXJLG1DY7tkoM9RUBsKK1An
cHRJnMV2Ej37JSj5o0ePznffEJ5yI+BEswIEjqnXtL8/0zHyv8GIJNBX2Afb
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
ZLK/itHRf37+uOZshNDYpQFlxl9IZAV92HLzdkvtneh1e2i260HYDwovLJm2
1OEeCgdcE32RNSXww4aa26DEGDkw3nw/n1UcZr82RxVPxbobaGoLBIL57tXz
GBkafD1Te+zCLu9COF/OpAuNr5GDrkHr3yV405VxmUscU46En/d6g4L3zK/8
mCtqvbLpwDVdS4kyVKkEVWoQc5VxsQ7rb1S0dXT1dXT/LZLowdt9NO90mEDL
Mtp+9a3bPR8/+jJx16F80xVlyni2gV2uGsTQsSqSx16z9szQI0oCT+RoQGyX
jUWqhGo5bK6B/TWiK4/gmmizUuC9tVQFykAvlZOVfS1mQHhpQApQuNjuPi/t
0/yswkXWd3n5r3HnI8MgKxyZj9RwdPTz1k6h86ZatJlY3SLJbWs+s6i2+k6m
BlSSyq4ta0zdf5K22O4uCvcQhc9XxHK1rXKWOXDMXHAoxdfe1v9xRkf/M/Sv
5vi0XKdNBTrWOfYb06y8mDbr6J67+BoWybqWsT4BV4ke2R47Iz22pepYgjfp
7tuSl9pxNuynr9vH0rPNUYMicC5pqthoIweeCj6LtE4Qx6gsv6Wnt7i6+g/x
/O98Mjr688jIOwQHoYxJhwyOvsjpXfO1IFYvkjXLMHBMfOt8SlIeQ9gerk+K
cdsRYWALDJhtuoIVeK6yuCVNi1AQm1mSxqVar+WpQZHW3sWC8iQDm8KwxI97
P2+vbWXZrqNqmedcvRZt552790hV/HWBJoHxzunSS5ECu3V3ZOBbfQpSU3J3
H8xcaH67ukzisxe8w1DF3r9ZKlhEynrr8GctNSmWrngZ5fk2E8KcVJ26LHZa
/Z/+ps7U6EI9m781ts13i14lo6N99S3iVdvzdW0yzVzp+FWMvSczse5CZXyG
BlSHMs3QIohU8EwjZ5bP/us41zzr9QIN8xg7r46GttriSks51fnuwP8I0lPQ
d5hCJtGrXgbDWWzPCfzwZkFdc+2dCMiVtTWwpb6rsaqdExTCWWD1NxS+CYWh
GzkLToU3VLSDbRIMbLjHLzVWd4KSvuttnob5JyhcgwwmS8s83Mz5qtdOSkic
juaCe/fuzXc/5w+wsP7wQ4ztqkcofCsaI5HH8eUwwO23o7AV8rgsoxWZ+vZ0
LUuuClQuYwrccqUsNtPCKz9DXFt7r7bufk1Nt0AJ11jd0dH+aUf7J5XsYrrT
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
IBAIBAKB+H3+H+BhzEw=
    "], {{0, 360}, {512, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> ColorProfileData[CompressedData["
1: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
fWL9bENQw1ije2Pvza0325p0m27cUrhV0SzcXHib/fbRO4Q76XfWW5JaFu5G
3Z1pDWx91+bVNtzu1v7s3rZ73R3WHfc7zTvbu4y6Wu7r3W9+oPPg5kOthw2P
NB7VP1Z/fOOJ+pMb3Rrd9U81nzb2aPc09W7pvdNn0Nfab9rf+czq2aPnds97
B5wHhgZ3DI4N+Q1Nvgh78fVl3Mvl4X0jmJHMUebR/Fd8r0peS7++PKYxdvuN
6ZvHbx3fDr/zfTf9Pub9ynj6B+KH/AnBiapJlcnmKfOpno/bP45PR00vz2R8
YvlU9Fnqc90Xwy+PZ91mx79Sv65/y57jnquYV5tvW3BYePU9/PvyYuYP7h+V
P7V+di25Lk0sx6/gVk6tSq82rVmvjayHr69HUaiUzacACqlwQAAA3yoAILoD
QOoBgMD4K+f6XVDI42MjL8UiuYUp8grohwQgT6gKBrAbfAsliTqN5kQXYeQw
XdgInCCuH3+CzpugQI+mf8XwlZHIpMq8nSWV9Sppgp2Pw53zJNcIjzhvFN8d
ASbBQKE7ItyiVLFm8SVJDako6QqZl3I4eXkFO8UApQTlFJX9qqlqu9VpGoGa
27RktNHar3Ru6uZvidVz1tc04DWEDWeMBo07TG6YVpgVmedaZFqmWu3aSrOO
sAm29bfzs/dz8NsWRI5wpDntds5wOeJ60q3YvcLj8vb6Hc2ebTs7vR55P6X0
+wz6Dvu99f8csBZECpYLsQwNCDsYfjGiJ3I+mpOqFeNOS4jNjiuMv5hwJ7Ev
aSoZ3i2wR2+v1760lOrU/rS1/QIZygdMDroeCs88kFWW3XX4y1H+Y+Sc7NxH
eUwnnPMLTo4U8J32KDxZ1HMWX2x4LuH85ZLJMpELO8qpFfsqj1WVVDfW9F2c
rSVd1r0SfLXw2tM6/A3NepcGWuOxmzVNbbeeN4/f/npnqWW9FdWGbsfeo+sg
dOI6V7tm7vc8qHhIfaT8aOJxzhPNJ2PdNU9jewx68b19fYX9fs8Unv183jGQ
O0gZ0nrB82L15ZvheyMXRjNe+b82GuMbm3/z8G3xu7j3DuPySJR9nXg5+WCq
+WPd9NWZK5+uf679Ujl76Wv7t9l5rYWiRYEft5diVvTXuNfXN1+M3GALiAaN
EAEyhQ5Cg7AsnAaPI2+rNuS934KxwYxjD+E0cB/wZ+h2EIQJM/TTSAQAJiKz
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
      "], "RGB", "XYZ"], 
    Interleaving -> True],
   Selectable->False],
  BaseStyle->"ImageGraphics",
  ImageSizeRaw->{512, 360},
  PlotRange->{{0, 512}, {0, 360}}]], "Input"],

Cell["a) Solve for N1, N2, and N3", "Text",
 CellChangeTimes->{{3.591990276994278*^9, 3.59199028046492*^9}, {
  3.59199098861061*^9, 3.591990991136162*^9}, {3.591992591293766*^9, 
  3.5919925916186743`*^9}},
 Background->GrayLevel[0.85]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", 
   RowBox[{"c", ",", "c1", ",", "c4", ",", "c0"}], "]"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"Solve", " ", "for", " ", "N1"}], "*)"}]}], "\[IndentingNewLine]", 

 RowBox[{
  RowBox[{
   RowBox[{"N1func", "[", 
    RowBox[{"z1_", ",", "z2_", ",", "z3_", ",", 
     RowBox[{"c1_:", "c1"}]}], "]"}], " ", ":=", " ", 
   RowBox[{"c1", "*", 
    RowBox[{"(", "z1", ")"}], "*", 
    RowBox[{"(", 
     RowBox[{"z1", "-", 
      RowBox[{"1", "/", "3"}]}], ")"}], "*", 
    RowBox[{"(", 
     RowBox[{"z1", "-", 
      RowBox[{"2", "/", "3"}]}], ")"}]}]}], " ", 
  RowBox[{"(*", 
   RowBox[{"Determined", " ", "by", " ", "hand"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{"Print", "[", 
  RowBox[{"\"\<N1 = \>\"", ",", 
   RowBox[{"N1func", "[", 
    RowBox[{
     SubscriptBox["\[Xi]", "1"], ",", 
     SubscriptBox["\[Xi]", "2"], ",", 
     SubscriptBox["\[Xi]", "3"]}], "]"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"InterpCondition", "=", 
   RowBox[{"N1func", "[", 
    RowBox[{"1", ",", "0", ",", "0"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Print", "[", 
  RowBox[{
  "\"\<Interpolation Condition: \>\"", ",", "InterpCondition", ",", 
   "\"\< = 1 (point 1)\>\""}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"c", "=", 
   RowBox[{"Solve", "[", 
    RowBox[{
     RowBox[{"InterpCondition", "\[Equal]", "1"}], ",", "c1"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"c1", " ", "=", " ", 
   RowBox[{"c", "[", 
    RowBox[{"[", 
     RowBox[{"1", ",", "1", ",", "2"}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Print", "[", 
  RowBox[{"\"\<\!\(\*SubscriptBox[\(c\), \(1\)]\) = \>\"", ",", " ", "c1"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"PrintWithStyle", "[", "\"\<N1 = \>\"", "]"}], 
   RowBox[{"PrintWithStyle", "[", 
    RowBox[{"N1func", "[", 
     RowBox[{
      SubscriptBox["\[Xi]", "1"], ",", 
      SubscriptBox["\[Xi]", "2"], ",", 
      SubscriptBox["\[Xi]", "3"], ",", "c1"}], "]"}], "]"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Print", "[", "\"\<\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
  "Print", "[", 
   "\"\<----------------------------------------------------------------------\
----\>\"", "]"}], " ", 
  RowBox[{"(*", "Newline", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Print", "[", "\"\<\>\"", "]"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"Solve", " ", "for", " ", "N4"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"N4func", "[", 
    RowBox[{"z1_", ",", "z2_", ",", "z3_", ",", 
     RowBox[{"c4_:", "c4"}]}], "]"}], " ", ":=", " ", 
   RowBox[{"c4", "*", 
    RowBox[{"(", "z2", ")"}], "*", 
    RowBox[{"(", 
     RowBox[{"z1", "-", 
      RowBox[{"1", "/", "3"}]}], ")"}], "*", 
    RowBox[{"(", "z1", ")"}]}]}], ";", "  ", 
  RowBox[{"(*", 
   RowBox[{"Determined", " ", "by", " ", "hand"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"Print", "[", 
   RowBox[{"\"\<N4 = \>\"", ",", 
    RowBox[{"N4func", "[", 
     RowBox[{
      SubscriptBox["\[Xi]", "1"], ",", 
      SubscriptBox["\[Xi]", "2"], ",", 
      SubscriptBox["\[Xi]", "3"]}], "]"}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"InterpCondition", "=", 
   RowBox[{"N4func", "[", 
    RowBox[{
     RowBox[{"2", "/", "3"}], ",", 
     RowBox[{"1", "/", "3"}], ",", "0"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Print", "[", 
  RowBox[{
  "\"\<Interpolation Condition: \>\"", ",", "InterpCondition", ",", 
   "\"\< = 1 (point 4)\>\""}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"c", "=", 
   RowBox[{"Solve", "[", 
    RowBox[{
     RowBox[{"InterpCondition", "\[Equal]", "1"}], ",", "c4"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"c4", " ", "=", " ", 
   RowBox[{"c", "[", 
    RowBox[{"[", 
     RowBox[{"1", ",", "1", ",", "2"}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Print", "[", 
  RowBox[{"\"\<\!\(\*SubscriptBox[\(c\), \(4\)]\) = \>\"", ",", " ", "c4"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"PrintWithStyle", "[", "\"\<N4 = \>\"", "]"}], 
   RowBox[{"PrintWithStyle", "[", 
    RowBox[{"N4func", "[", 
     RowBox[{
      SubscriptBox["\[Xi]", "1"], ",", 
      SubscriptBox["\[Xi]", "2"], ",", 
      SubscriptBox["\[Xi]", "3"], ",", "c4"}], "]"}], "]"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Print", "[", "\"\<\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
  "Print", "[", 
   "\"\<----------------------------------------------------------------------\
----\>\"", "]"}], " ", 
  RowBox[{"(*", "Newline", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Print", "[", "\"\<\>\"", "]"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"Solve", " ", "for", " ", "N0"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"N0func", "[", 
    RowBox[{"z1_", ",", "z2_", ",", "z3_", ",", 
     RowBox[{"c0_:", "c0"}]}], "]"}], " ", ":=", " ", 
   RowBox[{"c0", "*", "z1", "*", "z2", "*", "z3"}]}], ";", "  ", 
  RowBox[{"(*", 
   RowBox[{"Determined", " ", "by", " ", "hand"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"Print", "[", 
   RowBox[{"\"\<N0= \>\"", ",", 
    RowBox[{"N0func", "[", 
     RowBox[{
      SubscriptBox["\[Xi]", "1"], ",", 
      SubscriptBox["\[Xi]", "2"], ",", 
      SubscriptBox["\[Xi]", "3"]}], "]"}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"InterpCondition", "=", 
   RowBox[{"N0func", "[", 
    RowBox[{
     RowBox[{"1", "/", "3"}], ",", 
     RowBox[{"1", "/", "3"}], ",", 
     RowBox[{"1", "/", "3"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Print", "[", 
  RowBox[{
  "\"\<Interpolation Condition: \>\"", ",", "InterpCondition", ",", 
   "\"\< = 1 (point 0)\>\""}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"c", "=", 
   RowBox[{"Solve", "[", 
    RowBox[{
     RowBox[{"InterpCondition", "\[Equal]", "1"}], ",", "c0"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"c0", "=", " ", 
   RowBox[{"c", "[", 
    RowBox[{"[", 
     RowBox[{"1", ",", "1", ",", "2"}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Print", "[", 
  RowBox[{"\"\<\!\(\*SubscriptBox[\(c\), \(0\)]\) = \>\"", ",", " ", "c0"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"PrintWithStyle", "[", "\"\<N0 = \>\"", "]"}], 
   RowBox[{"PrintWithStyle", "[", 
    RowBox[{"N0func", "[", 
     RowBox[{
      SubscriptBox["\[Xi]", "1"], ",", 
      SubscriptBox["\[Xi]", "2"], ",", 
      SubscriptBox["\[Xi]", "3"], ",", "c0"}], "]"}], "]"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.591989247421452*^9, 3.5919894914450893`*^9}, {
  3.591989883937523*^9, 3.5919905688308363`*^9}, {3.591990993546855*^9, 
  3.591991086052661*^9}, {3.591991119985826*^9, 3.591991432675462*^9}, {
  3.591991467449046*^9, 3.591991513891481*^9}, {3.591991560115148*^9, 
  3.591991785823676*^9}, {3.591991833526528*^9, 3.591991835451964*^9}, {
  3.591991952963834*^9, 3.59199195383174*^9}, {3.591992058010021*^9, 
  3.591992058480554*^9}, {3.591992320212009*^9, 3.591992447916339*^9}, {
  3.5919924829013577`*^9, 3.5919925044871883`*^9}, {3.591992535437295*^9, 
  3.591992535680193*^9}, {3.5919925675292473`*^9, 3.591992574751952*^9}, {
  3.591992692298318*^9, 3.591992693378977*^9}, {3.591992964905789*^9, 
  3.5919930229649773`*^9}, {3.59199328585058*^9, 3.5919933343208847`*^9}, {
  3.591994106754726*^9, 3.591994131034485*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"N1 = \"\>", "\[InvisibleSpace]", 
   RowBox[{"c1", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", 
       FractionBox["2", "3"]}], "+", 
      SubscriptBox["\[Xi]", "1"]}], ")"}], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", 
       FractionBox["1", "3"]}], "+", 
      SubscriptBox["\[Xi]", "1"]}], ")"}], " ", 
    SubscriptBox["\[Xi]", "1"]}]}],
  SequenceForm[
  "N1 = ", $CellContext`c1 (Rational[-2, 3] + 
    Subscript[$CellContext`\[Xi], 1]) (Rational[-1, 3] + 
    Subscript[$CellContext`\[Xi], 1]) Subscript[$CellContext`\[Xi], 1]],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.5919924488935747`*^9, {3.591992489232916*^9, 3.591992505264471*^9}, 
   3.591992536462365*^9, {3.5919925682491083`*^9, 3.591992576076642*^9}, 
   3.591993036697019*^9, 3.5919933371069107`*^9, 3.591993986221157*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Interpolation Condition: \"\>", "\[InvisibleSpace]", 
   FractionBox[
    RowBox[{"2", " ", "c1"}], "9"], 
   "\[InvisibleSpace]", "\<\" = 1 (point 1)\"\>"}],
  SequenceForm[
  "Interpolation Condition: ", Rational[2, 9] $CellContext`c1, 
   " = 1 (point 1)"],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.5919924488935747`*^9, {3.591992489232916*^9, 3.591992505264471*^9}, 
   3.591992536462365*^9, {3.5919925682491083`*^9, 3.591992576076642*^9}, 
   3.591993036697019*^9, 3.5919933371069107`*^9, 3.591993986222775*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"\\!\\(\\*SubscriptBox[\\(c\\), \\(1\\)]\\) = \"\>", 
   "\[InvisibleSpace]", 
   FractionBox["9", "2"]}],
  SequenceForm["\!\(\*SubscriptBox[\(c\), \(1\)]\) = ", 
   Rational[9, 2]],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.5919924488935747`*^9, {3.591992489232916*^9, 3.591992505264471*^9}, 
   3.591992536462365*^9, {3.5919925682491083`*^9, 3.591992576076642*^9}, 
   3.591993036697019*^9, 3.5919933371069107`*^9, 3.591993986223958*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  FrameBox[
   StyleBox["\<\"N1 = \"\>",
    StripOnInput->False,
    FontSize->18,
    FontWeight->Bold,
    Background->RGBColor[0.88, 1, 0.88]],
   Background->RGBColor[0.88, 1, 0.88],
   StripOnInput->False], " ", 
  FrameBox[
   StyleBox[
    RowBox[{
     FractionBox["9", "2"], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", 
        FractionBox["2", "3"]}], "+", 
       SubscriptBox["\[Xi]", "1"]}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", 
        FractionBox["1", "3"]}], "+", 
       SubscriptBox["\[Xi]", "1"]}], ")"}], " ", 
     SubscriptBox["\[Xi]", "1"]}],
    StripOnInput->False,
    FontSize->18,
    FontWeight->Bold,
    Background->RGBColor[0.88, 1, 0.88]],
   Background->RGBColor[0.88, 1, 0.88],
   StripOnInput->False]}]], "Output",
 CellChangeTimes->{{3.591992445199572*^9, 3.591992448899516*^9}, {
   3.59199248923685*^9, 3.591992505269588*^9}, 3.59199253646655*^9, {
   3.591992568255856*^9, 3.5919925760807657`*^9}, 3.5919930367013474`*^9, 
   3.591993337111412*^9, 3.5919939862255497`*^9}],

Cell[CellGroupData[{

Cell[BoxData["\<\"\"\>"], "Print",
 CellChangeTimes->{
  3.5919924488935747`*^9, {3.591992489232916*^9, 3.591992505264471*^9}, 
   3.591992536462365*^9, {3.5919925682491083`*^9, 3.591992576076642*^9}, 
   3.591993036697019*^9, 3.5919933371069107`*^9, 3.591993986227366*^9}],

Cell[BoxData["\<\"------------------------------------------------------------\
--------------\"\>"], "Print",
 CellChangeTimes->{
  3.5919924488935747`*^9, {3.591992489232916*^9, 3.591992505264471*^9}, 
   3.591992536462365*^9, {3.5919925682491083`*^9, 3.591992576076642*^9}, 
   3.591993036697019*^9, 3.5919933371069107`*^9, 3.59199398622824*^9}],

Cell[BoxData["\<\"\"\>"], "Print",
 CellChangeTimes->{
  3.5919924488935747`*^9, {3.591992489232916*^9, 3.591992505264471*^9}, 
   3.591992536462365*^9, {3.5919925682491083`*^9, 3.591992576076642*^9}, 
   3.591993036697019*^9, 3.5919933371069107`*^9, 3.591993986229528*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"N4 = \"\>", "\[InvisibleSpace]", 
   RowBox[{"c4", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", 
       FractionBox["1", "3"]}], "+", 
      SubscriptBox["\[Xi]", "1"]}], ")"}], " ", 
    SubscriptBox["\[Xi]", "1"], " ", 
    SubscriptBox["\[Xi]", "2"]}]}],
  SequenceForm[
  "N4 = ", $CellContext`c4 (Rational[-1, 3] + 
    Subscript[$CellContext`\[Xi], 1]) Subscript[$CellContext`\[Xi], 1] 
   Subscript[$CellContext`\[Xi], 2]],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.5919924488935747`*^9, {3.591992489232916*^9, 3.591992505264471*^9}, 
   3.591992536462365*^9, {3.5919925682491083`*^9, 3.591992576076642*^9}, 
   3.591993036697019*^9, 3.5919933371069107`*^9, 3.591993986230863*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Interpolation Condition: \"\>", "\[InvisibleSpace]", 
   FractionBox[
    RowBox[{"2", " ", "c4"}], "27"], 
   "\[InvisibleSpace]", "\<\" = 1 (point 4)\"\>"}],
  SequenceForm[
  "Interpolation Condition: ", Rational[2, 27] $CellContext`c4, 
   " = 1 (point 4)"],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.5919924488935747`*^9, {3.591992489232916*^9, 3.591992505264471*^9}, 
   3.591992536462365*^9, {3.5919925682491083`*^9, 3.591992576076642*^9}, 
   3.591993036697019*^9, 3.5919933371069107`*^9, 3.591993986232236*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"\\!\\(\\*SubscriptBox[\\(c\\), \\(4\\)]\\) = \"\>", 
   "\[InvisibleSpace]", 
   FractionBox["27", "2"]}],
  SequenceForm["\!\(\*SubscriptBox[\(c\), \(4\)]\) = ", 
   Rational[27, 2]],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.5919924488935747`*^9, {3.591992489232916*^9, 3.591992505264471*^9}, 
   3.591992536462365*^9, {3.5919925682491083`*^9, 3.591992576076642*^9}, 
   3.591993036697019*^9, 3.5919933371069107`*^9, 3.5919939862336397`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  FrameBox[
   StyleBox["\<\"N4 = \"\>",
    StripOnInput->False,
    FontSize->18,
    FontWeight->Bold,
    Background->RGBColor[0.88, 1, 0.88]],
   Background->RGBColor[0.88, 1, 0.88],
   StripOnInput->False], " ", 
  FrameBox[
   StyleBox[
    RowBox[{
     FractionBox["27", "2"], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", 
        FractionBox["1", "3"]}], "+", 
       SubscriptBox["\[Xi]", "1"]}], ")"}], " ", 
     SubscriptBox["\[Xi]", "1"], " ", 
     SubscriptBox["\[Xi]", "2"]}],
    StripOnInput->False,
    FontSize->18,
    FontWeight->Bold,
    Background->RGBColor[0.88, 1, 0.88]],
   Background->RGBColor[0.88, 1, 0.88],
   StripOnInput->False]}]], "Output",
 CellChangeTimes->{{3.591992445199572*^9, 3.591992448899516*^9}, {
   3.59199248923685*^9, 3.591992505269588*^9}, 3.59199253646655*^9, {
   3.591992568255856*^9, 3.5919925760807657`*^9}, 3.5919930367013474`*^9, 
   3.591993337111412*^9, 3.591993986235126*^9}],

Cell[CellGroupData[{

Cell[BoxData["\<\"\"\>"], "Print",
 CellChangeTimes->{
  3.5919924488935747`*^9, {3.591992489232916*^9, 3.591992505264471*^9}, 
   3.591992536462365*^9, {3.5919925682491083`*^9, 3.591992576076642*^9}, 
   3.591993036697019*^9, 3.5919933371069107`*^9, 3.591993986236752*^9}],

Cell[BoxData["\<\"------------------------------------------------------------\
--------------\"\>"], "Print",
 CellChangeTimes->{
  3.5919924488935747`*^9, {3.591992489232916*^9, 3.591992505264471*^9}, 
   3.591992536462365*^9, {3.5919925682491083`*^9, 3.591992576076642*^9}, 
   3.591993036697019*^9, 3.5919933371069107`*^9, 3.591993986237567*^9}],

Cell[BoxData["\<\"\"\>"], "Print",
 CellChangeTimes->{
  3.5919924488935747`*^9, {3.591992489232916*^9, 3.591992505264471*^9}, 
   3.591992536462365*^9, {3.5919925682491083`*^9, 3.591992576076642*^9}, 
   3.591993036697019*^9, 3.5919933371069107`*^9, 3.59199398623869*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"N0= \"\>", "\[InvisibleSpace]", 
   RowBox[{"c0", " ", 
    SubscriptBox["\[Xi]", "1"], " ", 
    SubscriptBox["\[Xi]", "2"], " ", 
    SubscriptBox["\[Xi]", "3"]}]}],
  SequenceForm[
  "N0= ", $CellContext`c0 Subscript[$CellContext`\[Xi], 1] 
   Subscript[$CellContext`\[Xi], 2] Subscript[$CellContext`\[Xi], 3]],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.5919924488935747`*^9, {3.591992489232916*^9, 3.591992505264471*^9}, 
   3.591992536462365*^9, {3.5919925682491083`*^9, 3.591992576076642*^9}, 
   3.591993036697019*^9, 3.5919933371069107`*^9, 3.59199398623986*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Interpolation Condition: \"\>", "\[InvisibleSpace]", 
   FractionBox["c0", "27"], "\[InvisibleSpace]", "\<\" = 1 (point 0)\"\>"}],
  SequenceForm[
  "Interpolation Condition: ", Rational[1, 27] $CellContext`c0, 
   " = 1 (point 0)"],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.5919924488935747`*^9, {3.591992489232916*^9, 3.591992505264471*^9}, 
   3.591992536462365*^9, {3.5919925682491083`*^9, 3.591992576076642*^9}, 
   3.591993036697019*^9, 3.5919933371069107`*^9, 3.5919939862410793`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"\\!\\(\\*SubscriptBox[\\(c\\), \\(0\\)]\\) = \"\>", 
   "\[InvisibleSpace]", "27"}],
  SequenceForm["\!\(\*SubscriptBox[\(c\), \(0\)]\) = ", 27],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.5919924488935747`*^9, {3.591992489232916*^9, 3.591992505264471*^9}, 
   3.591992536462365*^9, {3.5919925682491083`*^9, 3.591992576076642*^9}, 
   3.591993036697019*^9, 3.5919933371069107`*^9, 3.591993986242261*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  FrameBox[
   StyleBox["\<\"N0 = \"\>",
    StripOnInput->False,
    FontSize->18,
    FontWeight->Bold,
    Background->RGBColor[0.88, 1, 0.88]],
   Background->RGBColor[0.88, 1, 0.88],
   StripOnInput->False], " ", 
  FrameBox[
   StyleBox[
    RowBox[{"27", " ", 
     SubscriptBox["\[Xi]", "1"], " ", 
     SubscriptBox["\[Xi]", "2"], " ", 
     SubscriptBox["\[Xi]", "3"]}],
    StripOnInput->False,
    FontSize->18,
    FontWeight->Bold,
    Background->RGBColor[0.88, 1, 0.88]],
   Background->RGBColor[0.88, 1, 0.88],
   StripOnInput->False]}]], "Output",
 CellChangeTimes->{{3.591992445199572*^9, 3.591992448899516*^9}, {
   3.59199248923685*^9, 3.591992505269588*^9}, 3.59199253646655*^9, {
   3.591992568255856*^9, 3.5919925760807657`*^9}, 3.5919930367013474`*^9, 
   3.591993337111412*^9, 3.5919939862436037`*^9}]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.591990457611528*^9, 3.591990473512689*^9}}],

Cell["\<\
b) Gather the rest of the shape functions by substitution, verify that the \
rest of the shape functions sum to 1\
\>", "Text",
 CellChangeTimes->{{3.591990276994278*^9, 3.59199028046492*^9}, {
  3.59199098861061*^9, 3.591990991136162*^9}, {3.591992591293766*^9, 
  3.5919926609490213`*^9}},
 Background->GrayLevel[0.85]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"ClearAll", "[", 
  RowBox[{
  "N1", ",", "N2", ",", "N3", ",", "N4", ",", "N5", ",", "N6", ",", "N7", ",",
    "N8", ",", "N9", ",", "N0"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"N0", " ", "=", " ", 
    RowBox[{"N0func", "[", 
     RowBox[{
      SubscriptBox["\[Xi]", "1"], ",", 
      SubscriptBox["\[Xi]", "2"], ",", 
      SubscriptBox["\[Xi]", "3"]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"N1", ",", " ", "N2", ",", " ", 
    RowBox[{"N3", " ", "get", " ", "grouped", " ", 
     RowBox[{"together", "."}]}]}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"N1", " ", "=", " ", 
   RowBox[{"N1func", "[", 
    RowBox[{
     SubscriptBox["\[Xi]", "1"], ",", 
     SubscriptBox["\[Xi]", "2"], ",", 
     SubscriptBox["\[Xi]", "3"]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"N2", " ", "=", " ", 
   RowBox[{"N1func", "[", 
    RowBox[{
     SubscriptBox["\[Xi]", "2"], ",", 
     SubscriptBox["\[Xi]", "3"], ",", 
     SubscriptBox["\[Xi]", "1"]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"N3", " ", "=", " ", 
    RowBox[{"N1func", "[", 
     RowBox[{
      SubscriptBox["\[Xi]", "3"], ",", 
      SubscriptBox["\[Xi]", "1"], ",", 
      SubscriptBox["\[Xi]", "2"]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
   "N4", ",", " ", "N5", ",", " ", "N6", ",", " ", "N7", ",", " ", "N8", ",", 
    
    RowBox[{
     RowBox[{"N9", " ", "get", " ", "grouped", " ", 
      RowBox[{"together", ".", " ", "Replacement"}], " ", "by", " ", 
      "inspection"}], "..."}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"Cyclic", " ", 
    RowBox[{
     RowBox[{"permutationing", "!!"}], "!"}]}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"N4", " ", "=", " ", 
   RowBox[{"N4func", "[", 
    RowBox[{
     SubscriptBox["\[Xi]", "1"], ",", 
     SubscriptBox["\[Xi]", "2"], ",", 
     SubscriptBox["\[Xi]", "3"]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"N5", " ", "=", " ", 
    RowBox[{"N4func", "[", 
     RowBox[{
      SubscriptBox["\[Xi]", "2"], ",", 
      SubscriptBox["\[Xi]", "1"], ",", 
      SubscriptBox["\[Xi]", "3"]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"N6", "=", " ", 
   RowBox[{"N4func", "[", 
    RowBox[{
     SubscriptBox["\[Xi]", "2"], ",", 
     SubscriptBox["\[Xi]", "3"], ",", 
     SubscriptBox["\[Xi]", "1"]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"N7", " ", "=", " ", 
    RowBox[{"N4func", "[", 
     RowBox[{
      SubscriptBox["\[Xi]", "3"], ",", 
      SubscriptBox["\[Xi]", "2"], ",", 
      SubscriptBox["\[Xi]", "1"]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"N8", " ", "=", " ", 
   RowBox[{"N4func", "[", 
    RowBox[{
     SubscriptBox["\[Xi]", "3"], ",", 
     SubscriptBox["\[Xi]", "1"], ",", 
     SubscriptBox["\[Xi]", "2"]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"N9", " ", "=", " ", 
    RowBox[{"N4func", "[", 
     RowBox[{
      SubscriptBox["\[Xi]", "1"], ",", 
      SubscriptBox["\[Xi]", "3"], ",", 
      SubscriptBox["\[Xi]", "2"]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"S", " ", "=", " ", 
   RowBox[{
   "N1", "+", "N2", "+", "N3", "+", "N4", "+", "N5", "+", "N6", "+", "N7", 
    "+", "N8", "+", "N9", "+", "N0"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"S", "=", 
   RowBox[{"Simplify", "[", 
    RowBox[{"S", "/.", 
     RowBox[{"{", 
      RowBox[{
       SubscriptBox["\[Xi]", "3"], "\[Rule]", 
       RowBox[{"1", "-", 
        SubscriptBox["\[Xi]", "1"], "-", 
        SubscriptBox["\[Xi]", "2"]}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Str", "=", 
   RowBox[{
   "\"\<Sum of all shape functions \[CapitalSigma]( \!\(\*SubscriptBox[\(N\), \
\(n\)]\) ) = \>\"", "<>", " ", 
    RowBox[{"ToString", "[", "S", "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"PrintWithStyle", "[", "Str", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"PrintWithStyle", "[", "\"\<Yay!!!\>\"", "]"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]", 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.591992832144103*^9, 3.591992950391017*^9}, {
  3.5919930292382917`*^9, 3.591993098058977*^9}, {3.591993132047936*^9, 
  3.5919931885797577`*^9}, {3.591993343721957*^9, 3.591993452951275*^9}, {
  3.591993495677258*^9, 3.591993524269619*^9}, {3.591993569437312*^9, 
  3.59199365945735*^9}, {3.591993727373521*^9, 3.591993736489655*^9}, {
  3.591993846795013*^9, 3.59199397272582*^9}, {3.591994002903473*^9, 
  3.591994087759413*^9}, {3.5919941371983232`*^9, 3.591994257137124*^9}, {
  3.591994322328068*^9, 3.591994358781748*^9}, {3.591994414272751*^9, 
  3.591994417436947*^9}, {3.5919944651938353`*^9, 3.59199446761483*^9}, {
  3.591994523537223*^9, 3.59199467528207*^9}, {3.5919947068473682`*^9, 
  3.591995127688786*^9}, {3.591995173062807*^9, 3.5919952042518272`*^9}, {
  3.592059972402371*^9, 3.592060114562272*^9}, {3.592060228994317*^9, 
  3.592060239681265*^9}}],

Cell[BoxData[
 FrameBox[
  StyleBox["\<\"Sum of all shape functions \[CapitalSigma]( \
\\!\\(\\*SubscriptBox[\\(N\\), \\(n\\)]\\) ) = 1\"\>",
   StripOnInput->False,
   FontSize->18,
   FontWeight->Bold,
   Background->RGBColor[0.88, 1, 0.88]],
  Background->RGBColor[0.88, 1, 0.88],
  StripOnInput->False]], "Output",
 CellChangeTimes->{{3.591995117279261*^9, 3.5919951242727013`*^9}, {
   3.591995177795495*^9, 3.5919952047030573`*^9}, {3.592059991918303*^9, 
   3.592060012349287*^9}, 3.592060242964532*^9}],

Cell[BoxData[
 FrameBox[
  StyleBox["\<\"Yay!!!\"\>",
   StripOnInput->False,
   FontSize->18,
   FontWeight->Bold,
   Background->RGBColor[0.88, 1, 0.88]],
  Background->RGBColor[0.88, 1, 0.88],
  StripOnInput->False]], "Output",
 CellChangeTimes->{{3.591995117279261*^9, 3.5919951242727013`*^9}, {
   3.591995177795495*^9, 3.5919952047030573`*^9}, {3.592059991918303*^9, 
   3.592060012349287*^9}, 3.592060242967099*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{924, 829},
WindowMargins->{{4, Automatic}, {Automatic, 4}},
PrintingCopies->1,
PrintingPageRange->{1, Automatic},
FrontEndVersion->"9.0 for Mac OS X x86 (32-bit, 64-bit Kernel) (January 25, \
2013)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[579, 22, 254, 3, 92, "Title"],
Cell[836, 27, 258, 3, 51, "Subtitle"],
Cell[1097, 32, 65, 1, 29, "Subsubtitle"],
Cell[CellGroupData[{
Cell[1187, 37, 151, 2, 80, "Section"],
Cell[1341, 41, 816, 19, 63, "Input",
 InitializationCell->True],
Cell[2160, 62, 273, 5, 44, "Text"],
Cell[2436, 69, 475, 12, 63, "Input",
 InitializationCell->True],
Cell[2914, 83, 463, 11, 122, "Text"],
Cell[3380, 96, 28187, 770, 1320, "Input",
 InitializationCell->True]
}, Open  ]],
Cell[CellGroupData[{
Cell[31604, 871, 106, 1, 80, "Section"],
Cell[31713, 874, 220, 7, 46, "Text"],
Cell[CellGroupData[{
Cell[31958, 885, 3874, 94, 351, "Input"],
Cell[CellGroupData[{
Cell[35857, 983, 528, 10, 22, "Print"],
Cell[36388, 995, 2419, 68, 134, "Print"],
Cell[38810, 1065, 598, 13, 22, "Print"],
Cell[39411, 1080, 525, 10, 22, "Print"],
Cell[39939, 1092, 4475, 93, 134, "Print"],
Cell[44417, 1187, 770, 17, 22, "Print"],
Cell[45190, 1206, 528, 10, 22, "Print"],
Cell[45721, 1218, 3801, 86, 134, "Print"],
Cell[49525, 1306, 744, 17, 22, "Print"],
Cell[50272, 1325, 526, 10, 22, "Print"],
Cell[50801, 1337, 4179, 89, 134, "Print"],
Cell[54983, 1428, 773, 17, 22, "Print"]
}, Open  ]],
Cell[55771, 1448, 503, 12, 46, "Output"],
Cell[56277, 1462, 526, 13, 46, "Output"],
Cell[56806, 1477, 1077, 20, 230, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[57932, 1503, 106, 1, 80, "Section"],
Cell[CellGroupData[{
Cell[58063, 1508, 2204, 66, 113, "Input"],
Cell[60270, 1576, 18032, 434, 217, "Print"]
}, Open  ]],
Cell[CellGroupData[{
Cell[78339, 2015, 232, 4, 46, "Input"],
Cell[78574, 2021, 353, 10, 69, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[78976, 2037, 106, 1, 80, "Section"],
Cell[79085, 2040, 414, 13, 69, "Text"],
Cell[79502, 2055, 103736, 1706, 375, "Input"],
Cell[183241, 3763, 237, 4, 46, "Text"],
Cell[CellGroupData[{
Cell[183503, 3771, 7661, 211, 692, "Input"],
Cell[CellGroupData[{
Cell[191189, 3986, 882, 23, 40, "Print"],
Cell[192074, 4011, 578, 13, 40, "Print"],
Cell[192655, 4026, 500, 11, 39, "Print"]
}, Open  ]],
Cell[193170, 4040, 1084, 34, 69, "Output"],
Cell[CellGroupData[{
Cell[194279, 4078, 273, 4, 21, "Print"],
Cell[194555, 4084, 348, 5, 21, "Print"],
Cell[194906, 4091, 273, 4, 21, "Print"],
Cell[195182, 4097, 760, 19, 40, "Print"],
Cell[195945, 4118, 580, 13, 39, "Print"],
Cell[196528, 4133, 504, 11, 39, "Print"]
}, Open  ]],
Cell[197047, 4147, 978, 30, 69, "Output"],
Cell[CellGroupData[{
Cell[198050, 4181, 273, 4, 21, "Print"],
Cell[198326, 4187, 349, 5, 21, "Print"],
Cell[198678, 4194, 272, 4, 21, "Print"],
Cell[198953, 4200, 631, 14, 22, "Print"],
Cell[199587, 4216, 553, 11, 39, "Print"],
Cell[200143, 4229, 463, 9, 22, "Print"]
}, Open  ]],
Cell[200621, 4241, 851, 25, 46, "Output"]
}, Open  ]],
Cell[201487, 4269, 92, 1, 28, "Input"],
Cell[201582, 4272, 331, 7, 46, "Text"],
Cell[CellGroupData[{
Cell[201938, 4283, 5307, 141, 488, InheritFromParent],
Cell[207248, 4426, 510, 12, 46, "Output"],
Cell[207761, 4440, 422, 11, 80, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
